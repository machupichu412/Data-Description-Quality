[
     {
        "reverse_engineered_description": "This table contains the details for case resolution status of the ticket.",
        "comment": "Add the source and source table names and grain. \nIf the list is big then mention just the source name and grain.",
        "final_description": "This table contains the details for case resolution status of the ticket coming from Dynamics and Amplify source. Grain- ServiceRequestResolution"
      },
      {
        "reverse_engineered_description": "This table contains Customer data. It is a SCD Type 2 table which means it retains history of any change to customer attribute e.g. CustomerEmail,CustomerPUID etc.",
        "comment": "Add the source and source table names and grain. \nIf the list is big then mention just the source name and grain.",
        "final_description": "This table contains Customer data coming from Dynamics Cornerstone. It is a SCD Type 2 table which means it retains history of any change to customer attribute e.g. CustomerEmail,CustomerPUID etc. Grain - CustomerId and DataSource"
      },
      {
        "reverse_engineered_description": "This attribute is derived using decode logic on the CustomerPUId column.",
        "comment": "It is not a decode logic. change accordingly.\nLogic part is not clear.",
        "final_description": "This atrrribte is derived by calculating hex string result of SHA-2 family of CustomerPUId column coming from Cornestone source."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Incident CreatedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey -This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail \ncoming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\ne.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic -'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR buisness, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimDate table to get more details about Incident CreatedDatetime in UTC. This key is populated by joining CreatedTime from DimSupportServiceRequest table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Incident CreatedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey -This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail \ncoming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\ne.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic -'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR buisness, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimTime table to get more details about Incident CreatedDatetime in UTC. This key is populated by joining CreatedTime from DimSupportServiceRequest table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      }, 
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Incident ClosedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimDate table to get more details about Incident ClosedDatetime in UTC.This key is populated by joining ClosedDateTime from DimSupportServiceRequest table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Incident ClosedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimTime table to get more details about Incident ClosedDatetime in UTC. This key is populated by joining ClosedDateTime from DimSupportServiceRequest table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Incident CreatedDatetime in PT.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimDate table to get more details about Incident CreatedDatetime in PT. This key is populated by joining CreatedTime in PT from DimSupportServiceRequest table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Incident CreatedDatetime in PT.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimTime table to get more details about Incident CreatedDatetime in PT. This key is populated by joining CreatedTime in PT from DimSupportServiceRequest table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Incident ClosedDatetime in PT.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimDate table to get more details about Incident ClosedDatetime in PT . This key is populated by joining ClosedDateTime in PT from DimSupportServiceRequest table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Incident ClosedDatetime in PT.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimTime table to get more details about Incident ClosedDatetime in PT. This key is populated by joining ClosedDateTime in PT from DimSupportServiceRequest table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to get more details about Source.",
        "comment": "Add source table name",
        "final_description": "This is a reference key to DimDataSource table to get more details about Source. Direct mapping to DataSourcekey column in FactSupportServiceRequest table coming from SA&DP Commercial Source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to get more details about Source.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimDataSource table to get more details about Source. Direct mapping to OriginatingDataSourcekey column in FactSupportServiceRequest table coming from SA&DP Commercial Source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceOffering table to get the details of various Commercial Services offered.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimServiceOffering table to get the details of various Commercial Services offered. Direct mapping to ServiceOfferingKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimGlobalContract table to get the details of Commercial global contracts.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimGlobalContract table to get the details of Commercial global contracts. Direct mapping to GlobalContractKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimAgentRootCauseTaxonomy table to get details of various Issue root cause classifications.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimAgentRootCauseTaxonomy table to get details of various Issue root cause classifications. Direct mapping to AgentRootCauseTaxonomyKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportLanguage table to get more details about Language.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimSupportLanguage table to get more details about Language. Direct mapping to Supportlanguagekey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportAreaPath table to get details of various Support Area Paths.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimSupportAreaPath table to get details of various Support Area Paths. Direct mapping to SupportAreaPathKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimGeography table to get more details about customer geography.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimGeography table to get more details about customer geography. Direct mapping to CustomerGeographyKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee table to get details of Employee worked on the ticket.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity present within MLGCS datamart.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail coming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.\n\n e.g.-2: This is a reference key to DimGeography table to get more details about customer region related to the messaging impressions data.\nLogic - 'DisplayName' column from 'Domain_Geo' static domain file coming from Excel file source provided by CPR business, is joined with 'Market' column in DimGeography to pick GeographyKey",
        "final_description": "This is a reference key to DimEmployee table to get details of Employee worked on the ticket. Direct mapping to CurrentOwnerEmployeeKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimRange table to get more details about Ticket ageRange.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to DimRange table to get more details about Ticket ageRange. Derived by applying decode logic on ClosedDateTime,CreatedDateTime columns in DimSupportServiceRequest table coming from SA&DP Commercial Source. Logic: calculate new column Range-when datedifference of ClosedDateTime,CreatedDateTime < 0 then '<=0' ,when datedifference of ClosedDateTime,CreatedDateTime is > 0 and <=1 then '>0-1' ,... ,when datedifference of ClosedDateTime,CreatedDateTime >120 then '>120' . Now join DimRange based on this new Range column and extract RangeKey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportChannel table to get more details about medium of communication.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to DimSupportChannel table to get more details about medium of communication. Direct mapping to SupportChannelKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to the DimSubPlanningCategory to get more detail about Sub PlanningCategory.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to the DimSubPlanningCategory to get more detail about Sub PlanningCategory.Derived by applying decode logic on PlanningCategoryKey column in FactSupportServiceRequest table coming from SA&DP Commercial source. Logic: join FactSupportServiceRequest and Commercial-DimPlanningCategory tables based on PlanningCategoryKey and extract SubPlanningCategoryID, join this with DimSubPlanningCategory based on  SubPlanningCategoryID and extract SubPlanningCategorykey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceRequestStatus table to get status of ticket.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to DimServiceRequestStatus table to get staus of ticket. Direct mapping to ServiceRequestStatusKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceRequestState table to get current state of ticket.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to DimServiceRequestState table to get current state of ticket. Direct mapping to StateKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceOfferingMaster table to get more detail of various services offered for Commercial tickets.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey - This is a reference key to EmpMapData entity... etc.",
        "final_description": "This is a reference key to DimServiceOfferingMaster table to get more detail of various services offered for Commercial tickets. Direct mapping to ServiceOfferingMasterKey column in FactSupportServiceRequest table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Survey CreatedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimDate table to get more details about Survey CreatedDatetime in UTC. This key is populated by joining AcknowledgeDateTime from FactSurvey table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Survey CreatedDatetime in UTC.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimTime table to get more details about Survey CreatedDatetime in UTC. This key is populated by joining AcknowledgeDateTime from FactSurvey table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about Survey CreatedDatetime in PT.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimDate table to get more details about Survey CreatedDatetime in PT. This key is populated by joining AcknowledgeDateTime in PT from FactSurvey table coming from SA&DP Commercial source with CalendarDate in the DimDate and extracting Datekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about Survey CreatedDatetime in PT.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimTime table to get more details about Survey CreatedDatetime in PT. This key is populated by joining AcknowledgeDateTime in PT from FactSurvey table coming from SA&DP Commercial source with Time in the DimTime and extracting Timekey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimRange table to get more details about Ticket ageRange.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimRange table to get more details about Ticket ageRange. Derived by applying decode logic on ClosedDateTime,CreatedDateTime columns in DimSupportServiceRequest table coming from SA&DP Commercial Source. Logic: calculate new column Range-when datedifference of ClosedDateTime,CreatedDateTime < 0 then '<=0' ,... ,when datedifference of ClosedDateTime,CreatedDateTime >120 then '>120' . Now join DimRange based on this new Range column and extract RangeKey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimGeography table to get more details about customer geography.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimGeography table to get more details about customer geography. Direct mapping to CustomerGeographyKey column in FactSurvey table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportLanguage table to get more details about Language.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimSupportLanguage table to get more details about Language. Direct mapping to Supportlanguagekey column in FactSurvey table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to get more details about Source.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - .....\nOtherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimDataSource table to get more details about Source. Direct mapping to DataSourcekey column in FactSurvey table coming from SA&DP Commercial Source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportChannel table to get more details about medium of communication.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - ..... Otherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimSupportChannel table to get more details about medium of communication. Direct mapping to SupportChannelKey column in FactSurvey table coming from SA&DP Commercial source"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimMLGCSSurveyTarget table to get more details about MLGCS Business Targets associated with the survey.",
        "comment": "If it is a direct mapping to Commercial attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to rno - 60 as Logic - ..... Otherwise use description below to write the logic...",
        "final_description": "This is a reference key to DimMLGCSSurveyTarget table to get more details about MLGCS Business Targets associated with the survey. Derived by applying decode logic received from MDM_viw_Consumer_MAS_MLGCSSurveyProduct table coming from MDM source. Logic: based on logic available in MDM_viw_Consumer_MAS_MLGCSSurveyProduct table MLGCSSurveyTargetkey related to survey is mapped"
      },
      {
        "reverse_engineered_description": "Derived by applying decode logic on AccountTimelineid and Datekey columns.",
        "comment": "Add the Source table name",
        "final_description": "Derived by applying decode logic on AccountTimelineid and Datekey columns coming from Upstream source MDAP (Microsoft Ads Data Analytics Platform) DimAccountAttributesTimeline table.\nLogic: SegmentationKey is populated by joining FactPerformingAndNewCountMeasures table with DimAccountAttributesTimeline tables using AccountTimelineId and Datekey from both table"
      },
      {
        "reverse_engineered_description": "Derived by applying decode logic on AccountTimelineid and Datekey columns.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "Derived by applying decode logic on AccountTimelineid and Datekey columns coming from Upstream source MDAP (Microsoft Ads Data Analytics Platform) DimAccountAttributesTimeline table.\nLogic: AccountAttributeTimeLineKey is populated by joining FactPerformingAndNewCountMeasures table with DimAccountAttributesTimeline tables using AccountTimelineId and Datekey from both table"
      },
      {
        "reverse_engineered_description": "This is a Reference key to DimCustomerAccountNonPII table to get details for Customer Accounts.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a Reference key to DimCustomerAccountNonPII table to get details for Customer Accounts. logic: CustomerAccountNonPIIKey is populated by joining DimCustomerAccountNonPII table with FactPerformingAndNewCountmeasures table using accountid from both tables."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimIssueCode table to get details about IssueCode.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimIssueCode table to get details about IssueCode direct mapping of 'IssueCodeKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimCSSProduct table to get CSSProduct related to ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimCSSProduct table to get CSSProduct related to ticket direct mapping of 'CSSProductKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to know the date on which ticket is last modified in UTC timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to know the date on which ticket is last modified in UTC timezone direct mapping of 'LastModifiedUTCDateKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to FactServiceRequest table to get ticket details.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to FactServiceRequest table to get ticket details direct mapping of 'ServiceRequestKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportAreaPath table to get details about first support area path.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportAreaPath table to get details about first support area path direct mapping of 'FirstSAPKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportAreaPath table to get details about current support area path.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportAreaPath table to get details about current support area path direct mapping of 'SAPKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSubPlanningCategory table to get details about Sub Planning Category.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSubPlanningCategory table to get details about Sub Planning Category direct mapping of 'SubPlanningCategoryKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportQueue table to get details about the tickets' support queue.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportQueue table to get details about the tickets' support queue direct mapping of 'SupportQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to know the time when ticket is created in UTC timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to know the time when ticket is created in UTC timezone direct mapping of 'CreatedUTCTimeKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to know the date on which ticket is created in UTC timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to know the date on which ticket is created in UTC timezone direct mapping of 'CreatedUTCDateKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to know the time when ticket is last modified in PT timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to know the time when ticket is last modified in PT timezone"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimResourceTenure table to get details about Resource Tenure.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimResourceTenure table to get details about Resource Tenure direct mapping of 'ResourceTenureKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to know the date on which ticket is last modified in PT timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to know the date on which ticket is last modified in PT timezone direct mapping of 'LastModifiedPTDateKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceLine table to get details tickets' first service line.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimServiceLine table to get details tickets' first service line direct mapping of 'FirstServiceLineQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimGeography table to get details about Customer Geography.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimGeography table to get details about Customer Geography direct mapping of 'CustomerGeographyKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimVendorSite table to get details about the employees' company and location.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimVendorSite table to get details about the employees' company and location direct mapping of 'VendorSiteKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportChannel table to get first support channel of the ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportChannel table to get first support channel of the ticket direct mapping of 'FirstSupportChannelQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceLine table to get details tickets' service line.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimServiceLine table to get details tickets' service line direct mapping of 'ServiceLineKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee table to get details about the employee who worked on this ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimEmployee table to get details about the employee who worked on this ticket direct mapping of 'EmployeeKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimRootCauseClassification table to get details about root cause classification.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimRootCauseClassification table to get details about root cause classification direct mapping of 'RootCauseClassificationKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimCustomerPII table to get NonPII info about the customer.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimCustomerPII table to get NonPII info about the customer direct mapping of 'CustomerNonPIIKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportChannel table to get support channel of the ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportChannel table to get support channel of the ticket direct mapping of 'SupportChannelKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimProgramLineOfBusiness table to get program line of business details of the ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimProgramLineOfBusiness table to get program line of business details of the ticket direct mapping of 'ProgramLineOfBusinessKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportProduct table to get details about Support Product.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportProduct table to get details about Support Product direct mapping of 'SupportProductKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportQueue table to get details about the tickets' first support queue.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportQueue table to get details about the tickets' first support queue direct mapping of 'FirstSupportQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee table to get details about the first employee who worked on this ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimEmployee table to get details about the first employee who worked on this ticket direct mapping of 'FirstEmployeeQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimVendorSite table to get details about the first employees' company and location.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimVendorSite table to get details about the first employees' company and location direct mapping of 'FirstVendorSiteQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportLanguage table to get support language of the ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportLanguage table to get support language of the ticket direct mapping of 'SupportLanguageKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to know the time when ticket is created in PT timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to know the time when ticket is created in PT timezone direct mapping of 'CreatedPTTimeKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to identify the tool where ticket is created.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDataSource table to identify the tool where ticket is created direct mapping of 'DataSourceKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimCustomerPII table to get info about the customer.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimCustomerPII table to get info about the customer direct mapping of 'CustomerPIIKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "Surrogate key generated in UDP to get Survey Details.",
        "comment": "Need to re-work, please refer to the latest guidelines",
        "final_description": "Surrogate key generated in UDP to get Survey Details direct mapping of 'FactSurveyKey' from FactSurvey."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimSupportLanguage table to get first support language of the ticket.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimSupportLanguage table to get first support language of the ticket direct mapping of 'FirstSupportLanguageQueueKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimServiceRequestStatus table to get details about ticket status.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimServiceRequestStatus table to get details about ticket status direct mapping of 'ServiceRequestStatusKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to know the time when ticket is last modified in UTC timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to know the time when ticket is last modified in UTC timezone direct mapping of 'LastModifiedUTCTimeKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to know the date on which ticket is created in PT timezone.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to know the date on which ticket is created in PT timezone direct mapping of 'CreatedPTDateKey' from FactServiceRequest."
      },
      {
        "reverse_engineered_description": "This table contains details of Requests Transfer such as SupportArea, Organizations, and SupplierName.",
        "comment": "Need to work",
        "final_description": "This Table containt the details of Requests Transfer detail such as SupportArea,Organizations and SupplierName from Amplify Source."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee table to get more details about the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimEmployee table to get more details about the agent assigned to the particular phone interaction\nThis key is populated by joining AssignedAgent from source with UserId from DimEmployee"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimVendorSite table to get more details about VendorSite details of the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimVendorSite table to get more details about VendorSite details of the agent assigned to the particular phone interaction\nThis key is populated by joining ASSIGNED_VENDORCODE and AssignedSiteCode from source with VendorSiteCode from DimVendorSite"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to get more details about the source of the agent details.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDataSource table to get more details about the source of the agent details\nThis key is populated by joining hardcoded value 'Genesys' with DataSourceName from DimDataSource"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about the StartDate for the agent to which a phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to get more details about the StartDate for the agent to which a phone interaction was transferred. This key is populated by joining FROM_END_DATE_TIME from source with CalendarDate from DimDate"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about the StartTime for the agent to which a phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to get more details about the StartTime for the agent to which a phone interaction was transferred. This key is populated by joining FROM_END_DATE_TIME from source with Time from DimTime"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about the StartDate of the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to get more details about the StartDate of the agent assigned to the particular phone interaction. This key is populated by joining FromStartDateTime from source with CalendarDate from DimDate"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about the StartTime of the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to get more details about the StartTime of the agent assigned to the particular phone interaction. This key is populated by joining FromStartDateTime from source with Time from DimTime"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about the EndDate for the agent to which a phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to get more details about the EndDate for the agent to which a phone interaction was transferred. This key is populated by joining ToEndDateTime from source with CalendarDate from DimDate"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about the EndTime for the agent to which a phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to get more details about the EndTime for the agent to which a phone interaction was transferred. This key is populated by joining ToEndDateTime from source with Time from DimTime"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDate table to get more details about the EndDate of the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimDate table to get more details about the EndDate of the agent assigned to the particular phone interaction. This key is populated by joining ToStartDateTime from source with CalendarDate from DimDate"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimTime table to get more details about the EndTime of the agent assigned to the particular phone interaction.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimTime table to get more details about the EndTime of the agent assigned to the particular phone interaction. This key is populated by joining ToStartDateTime from source with Time from DimTime"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee table to get more details about the agent to which a phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimEmployee table to get more details about the agent to which a phone interaction was transferred. This key is populated by joining TransferredAgent from source with UserId from DimEmployee"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimVendorSite table to get more details about VendorSite details of agent to which phone interaction was transferred.",
        "comment": "Need to add the logic of key population. Please refer the latest Guidelines.",
        "final_description": "This is a reference key to DimVendorSite table to get more details about VendorSite details of agent to which phone interaction was transferred. This key is populated by joining either concatenation of TRANSFERRED_VENDORCODE,TransferredSiteCode or TransferredAgent from source with VendorSiteCode from DimVendorSite"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to internalemailaddress column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to internalemailaddress column coming from Upstream Source MSX(Microsoft Sales Experience), hub_vw_systemuser table by joining MSX hub_vw_lead table with systemUser table on createdbyid column from lead table and systemuserid column from systemuser table"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to internalemailaddress column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to internalemailaddress column coming from Upstream Source MSX(Microsoft Sales Experience), hub_vw_systemuser table by joining MSX hub_vw_lead table with systemUser table on ownerid column from lead table and systemuserid column from systemuser table"
      },
      {
        "reverse_engineered_description": "This column is an indirect mapping derived from MSX hub_vw_team and MSXAuditHistory.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This column is an indirect mapping derived from two sources : the MSX ADLS hub_vw_Team  table and the MSX API AuditHistory. It's mapped based on the ownerid column from hub_vw_lead with teamid column from hub_vw_team table, leadnumber from hub_vw_lead table and recordkeyvalue from MSX audithistory table. The values are obtained from team column from hub_vw_team table and newvalue column from MSXAuditHistory table.\nlogic: 1.join the lead table with team table: \n                       lead.ownerid == team.teamid\n       2.join the lead table with MSXAuditHistory:\n\t\t       lead.leadnumber == msx.RecordKeyValue and msx.operation == create\n       if msx.newvalue != null then newvalue otherwise team.team as a CreatorTeamName"
      },
      {
        "reverse_engineered_description": "Derived by applying decode logic on createddate column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "Derived by applying decode logic on createddate column coming from Upstream source MSX(Microsoft Sales Experience) hub_vw_opportunity table.\nLogic: date_format(\"createddate\", \"yyyyMMdd\").cast(\"int\")\n"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to team column from MSX hub_vw_team.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to team column coming from Upstream Source MSX(Microsoft Sales Experience) hub_vw_team table by joining MSX hub_vw_opportunity table with ownerid column from Opportunity table and teamid column from hub_vw_team table"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to value column from MSX hub_vw_stringmap.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to value column coming from Upstream Source MSX(Microsoft Sales Experience) hub_vw_hub_vw_stringmap table by joining MSX hub_vw_opportunity table with StatusSeqNo column from Opportunity table and StringMapSeqNo column from StringMap table"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to internalemailaddress column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to internalemailaddress column coming from Upstream Source MSX(Microsoft Sales Experience) ,hub_vw_systemuser table by joining MSX hub_vw_opportunity table with systemUser table on createdbyid column from opportunity table and systemuserid column from systemuser table"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to team column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to team column coming from Upstream Source MSX(Microsoft Sales Experience) hub_vw_team table by joining MSX hub_vw_opportunity table with createdbyid column from Opportunity table and teamid column from hub_vw_team table"
      },
      {
        "reverse_engineered_description": "This is an indirect mapping to internalemailaddress column.",
        "comment": "Need to add logic. Please refer the latest guidelines",
        "final_description": "This is an indirect mapping to internalemailaddress column coming from Upstream Source MSX(Microsoft Sales Experience) ,hub_vw_systemuser table by joining MSX hub_vw_opportunity table with systemUser table on ownerid column from opportunity table and systemuserid column from systemuser table"
      },
      {
        "reverse_engineered_description": "This table contains the details of Requests Transfer such as SupportArea, Organizations, and SupplierName.",
        "comment": "Add the source and source table names and grain. \nIf the list is big then mention just the source name and grain.",
        "final_description": "This is a Fact table for reporting users that  contains the details of Requests Transfer detail such as SupportArea,Organizations and SupplierName from Amplify Source.  Grain - RequestID"
      },
      {
        "reverse_engineered_description": "Direct mapping to CurOrg column.",
        "comment": "In desc it is not clear what is the source of OrganizationName column out of the two tables.\nRefer this desc and modify - This is an Indirect mapping to LearningPathInternalKey column from \"Learning_Path_Content Report\" API file coming from Cloud Academy source by joining UDP Skill Inventory DimLearningpath table with \"Learning_Path_Content Report\" on LearningPathID from both tables.",
        "final_description": "Direct mapping to CurOrg column in AmplifyTransfer entity coming from Amplify source."
      },
      {
        "reverse_engineered_description": "This is a reference key to DimEmployee entity to get more details about the agent assigned to the particular phone interaction.",
        "comment": "If it is a direct mapping to Commerical attribute then add the sentence that it is a direct mapping to xyz column in commercial similar to  rno - 60 in Sheet B3 as Logic - .....\nOtherwise use desc below to write the logic:\nRef desc below - SubmitterEmployeeKey -This is a reference key to EmpMapData entity.\nLogic - CSIEscalation and EmpMapData tables are joined on EmpMapData.EmployeeEmail and CSIEscalation.SubmitterEmail \ncoming from Critsit source and EmployeeKey is picked from EmpMapData table to populate SubmitterEmployeeKey.",
        "final_description": "This is a reference key to DimEmployee entity to get more details about the agent assigned to the particular phone interaction\nTRANSFER_FACT and DimEmployee tables are joined on AssignedAgent.TRANSFER_FACT coming from genesys source and UserId.DimEmployee from UDP and\nEmployeeKey is picked from DimEmployee table to populate AssignedEmployeeKey"
      },
      {
        "reverse_engineered_description": "This is a reference key to DimDataSource table to get more details about the source of the agent details.\nIt is the key corresponding to DataSourceGroup = \"Genesys\" in DimDataSource.",
        "comment": "Replace the red highlighted string with - \nIt is the key corresponding to DataSourceName =  \"Genesys\" in DimDataSource.",
        "final_description": "This is a reference key to DimDataSource table to get more details about the source of the agent details\nIt is the key correspoding to DataSourceGroup =  \"\"Genesys\"\" in DimDataSource"
      },
      {
        "reverse_engineered_description": "This table contains ticket data derived from DimSupportServiceRequest and FactSupportServiceRequest tables. Grain: ServiceRequestID",
        "comment": "I don't think this is all commercial tickets through, on MLGCS?",
        "final_description": "This table contains Commercial ticket data coming from SA&DP Commercial source. It is derived from DimSupportServiceRequest and FactSupportServiceRequest tables. Grain:ServiceRequestID"
      },
      {
        "reverse_engineered_description": "This table contains Language data. Grain: NativeLanguage",
        "comment": "Ok - but should be replaced with Common Language",
        "final_description": "This table contains Language data coming from SA&DP Commercial source. Grain: NativeLanguage"
      },
      {
        "reverse_engineered_description": "This table contains fields related to product details coming from AIPMR source.",
        "comment": "Grain is missing\nOk - is this still needed since Hololens cancelled?",
        "final_description": "This table contains fields related to product details coming from AIPMR source. Grain - StartDate,DaysFromLaunch,DeviceType"
      },
      {
        "reverse_engineered_description": "This table have the supplier engagement data.",
        "comment": "Please provide the entity details",
        "final_description": "This table have the supplier engagement data coming from latest gto source file"
      },
      {
        "reverse_engineered_description": "This entity contains the details of efficiency metrics for Sentry.",
        "comment": "Sentry_OLSSentryReviewerMetrics, is this a source? Also, please call it out if it's external source.",
        "final_description": "This entity contains the details of efficency metrics for Sentry. The agent and the minutes spent per limbo created item coming from Sentry_OLSSentryReviewerMetrics Source."
      },
      {
        "reverse_engineered_description": "Direct Mapping to IntervalEndPSTDateTime column coming from MC_OLSSentryReviewerMetrics Entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to IntervalEndPSTDateTime column  coming from MC_OLSSentryReviewerMetrics Entity from Sentry_OLSSentryReviewerMetrics source having Timestamp type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to IntervalStartPSTDateTime column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to IntervalStartPSTDateTime column  coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source having TimeStamp type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to AssignmentCreatedCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to AssignmentCreatedCount column coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source having Integer type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to ReviewEventCompletedPSTDate column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to ReviewEventCompletedPSTDate column coming from MC_OLSSentryReviewerMetrics Entity from Sentry_OLSSentryReviewerMetrics source having Timestamp type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to AssignmentCanceledCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to AssignmentCanceledCount column  coming from MC_OLSSentryReviewerMetrics Entity from Sentry_OLSSentryReviewerMetrics source having Integer type data."
      },
      {
        "reverse_engineered_description": "This is a mapping to ReviewerName column coming from MC_OLSSentryReviewer entity by joining ActingUserId from MC_OLSSentryReviewerMetrics with UserId from MC_OLSSentryReviewer.",
        "comment": "I would suggest not to mention it as Key, instead, we can have it as: It is an indirect mapping / This is derived from",
        "final_description": "This a Indirect Mapping  to ReviewerName column   coming from MC_OLSSentryReviewer entity joined based on  ActingUserId column from MC_OLSSentryReviewerMetrics entity with UserId  column from MC_OLSSentryReviewer entity having string values."
      },
      {
        "reverse_engineered_description": "Direct Mapping to ReviewEventCompletedDateKey column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to ReviewEventCompletedDateKey column having string values coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source."
      },
      {
        "reverse_engineered_description": "This is a mapping to QueueName column coming from MC_OLSSentryQueue entity by joining CurrentQueueId from MC_OLSSentryReviewerMetrics with QueueId from MC_OLSSentryQueue.",
        "comment": "I would suggest not to mention it as Key, instead, we can have it as: It is an indirect mapping / This is derived from",
        "final_description": "This a Indirect Mapping to QueueName column coming from  MC_OLSSentryQueue entity joined based on  CurrentQueueId column from MC_OLSSentryReviewerMetrics entity with QueueId  column from MC_OLSSentryQueue entity having string values."
      },
      {
        "reverse_engineered_description": "Direct Mapping to ReviewEscalatedCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to ReviewEscalatedCount column coming from MC_OLSSentryReviewerMetrics Entity from Sentry_OLSSentryReviewerMetrics source having Integer type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to HoldCreatedCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to HoldCreatedCount column coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source having Integer type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to ReviewReconstitutedByAdminCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to ReviewReconstitutedByAdminCount column coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source having Integer type data."
      },
      {
        "reverse_engineered_description": "Direct Mapping to AssignmentExpiredCount column coming from MC_OLSSentryReviewerMetrics entity.",
        "comment": "Please add the datatype of the column",
        "final_description": "Direct Mapping to AssignmentExpiredCount column having Integer type data coming from MC_OLSSentryReviewerMetrics entity from Sentry_OLSSentryReviewerMetrics source."
      },
      {
        "reverse_engineered_description": "Direct Mapping to SRID Column coming from Asimov.CLL file.",
        "comment": "Please add the complete description",
        "final_description": "Direct Mapping to SRID Column having string values coming from Asimov.CLL file from external source cornerstone."
      },
      {
        "reverse_engineered_description": "Derived by applying decode logic on AgentGroup column coming from multiple excel files provided by Store Business Team. Logic: If AgentGroup matches pattern then assign corresponding hardcoded string.",
        "comment": "Please add the datatype of the column",
        "final_description": "Derived by applying decode logic on AgentGroup column having string values coming from MC_PRCSites_open_demand_daily, MC_PRCSites_open_demand_SMB & MC_PRCSites_open_demand_SOCIAL excel files provided by Store Business Team. Logic: If AgentGroup matches with pattern like r'%accounts%billing%' then Hardcoded as \"Accounts And Billing\" If AgentGroup matches with pattern like r'%up%running%' then Hardcoded as \"Up And Running\" If AgentGroup matches with pattern like r'%tech%support%xbox%' then Hardcoded as \"Technical Support - Xbox\" If AgentGroup matches with pattern like r'%tech%supp%surface%' then Hardcoded as \"Technical Support - Support\" else AgentGroup"
      },
      {
        "reverse_engineered_description": "Derived by applying logic on ChatDeviceKey columns from FactChatVendor and FactMessaging tables to derive ChatDeviceKey.",
        "comment": "Please add the datatype of the column and also this derivation is not decoding, So dont mention it as decode",
        "final_description": "Derived by applying decode logic on FactChatVendor.ChatDeviceKey, FactMessaging.ChatDeviceKey coming from LivePersonMessaging source having bigint values to derive ChatDeviceKey column. Logic: If FactChatVendor.ChatDeviceKey is null then FactMessaging.ChatDeviceKey else FactChatVendor.ChatDeviceKey"
      },
      {
        "reverse_engineered_description": "Derived by applying decode logic on Agent column coming from RevenueReport-Insession and CrossSession excel files. Logic assigns vendor names based on matching patterns.",
        "comment": "Please add the datatype of the column",
        "final_description": "Derived by applying decode login on Agent column having string values coming from RevenueReport-Insession and CrossSession excel files provided by Store Business Team.  Logic example: If Agent matches with pattern like r'%sut_%' then Hardcoded as \"Sutherland\" If Agent matches with pattern like r'%arv_%' then Hardcoded as \"Arvato\" If Agent matches with pattern like r'%dat_%' then Hardcoded as \"Datacom\" If Agent matches with pattern like r'%mmh_%' then Hardcoded as \"Moshi Moshi Hotline\" If Agent matches with pattern like r'%sit_%' then Hardcoded as \"Sitel\" If Agent matches with pattern like r'%str_%' then Hardcoded as \"Stream\""
      },
      {
        "reverse_engineered_description": "Direct mapping to DistributorId column coming from MsOrder-Materialized DeltaStream files.",
        "comment": "Please call out cornerstone as External source",
        "final_description": "Direct mapping to DistributorId column having string values coming of MsOrder-Materialized DeltaStream files coming from external source cornerstone maintained in Cosmos."
      },
      {
        "reverse_engineered_description": "Direct mapping to SkuDescription column coming from MsOrder-Materialized DeltaStream files.",
        "comment": "Please call out cornerstone as External source",
        "final_description": "Direct mapping to SkuDescription column having string values coming of MsOrder-Materialized DeltaStream files coming from external source cornerstone maintained in Cosmos"
      }
]