FilePath,FileName,FileAttributes,description,L3 - Himanshu: 4-Mar,L3 Reviewer Comments,L3 Review Status,L3 Reviewer,1st march,4th march
UDPCommercial_NRT,vwdimarrservice,ARRServiceId,This Attribute has a static value - <3001> decided by commercial business and uploaded through flat file.,Ok,Provide the logic for surrogate key generation like which columns ?,,,Updated,
UDPCommercial_NRT,vwdimarrservice,ARRType,Direct mapping to ARRType column coming from static file having string values provided by commercial business.,Ok,,"In desc source table is mentioned as DimARRService table  and then source is mentioned as static source. 
Is it a static source file? 
Re check and phrase it accordingly.",,Updated,
UDPCommercial_NRT,vwdimarrservice,ServiceName,Direct mapping to ServiceName column coming from static file having string values provided by commercial business.,Ok,,ref rno - 3,,Updated,
UDPCommercial_NRT,vwdimarrservice,ServicePackageSKU,Direct mapping to ServicePackageSKU column coming from static file having string values provided by commercial business.,Ok,,ref rno - 3,,Updated,
UDPCommercial_NRT,vwdimarrservicepackage,ARRServicePackageId,"This Attribute has a static value (2001,2002,2003,2004,2005) provided by commercial business and uploaded through flat file.",Ok,Provide the logic for surrogate key generation like which columns ?,ref rno - 3,,Updated,
UDPCommercial_NRT,vwdimarrservicepackage,ARRType,Direct mapping to ARRType column coming from static file having string values provided by commercial business.,Ok,,ref rno - 3,,Updated,
UDPCommercial_NRT,vwdimarrservicepackage,ServicePackageName,Direct mapping to ServicePackageName column coming from static file having string values provided by commercial business.,Ok,,ref rno - 3,,Updated,
UDPCommercial_NRT,vwdimcausetype,CauseType,Direct mapping to CaseType column in Cases table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimcausetype,CauseTypeKey,SurrogateKey generated within UDP NRT to identify unique records of DimCauseType table. Generated based on the column CauseType.,Ok,Provide the logic for surrogate key generation like which columns ?,Add source table and souce name,Ram,Updated,
UDPCommercial_NRT,vwdimcausetype,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimcausetype,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,CreatedDateTime,Direct mapping to CreateDate column in IncidentsSnapshotV2 table from ICMDataWarehouse source having Timestamp(UTC) values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,ModifiedDateTime,Direct mapping to ModifiedDate column coming from IncidentsSnapshotV2 table from ICMDataWarehouse source having  Timestamp(UTC) values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,ResolvedDateTime,Direct mapping to ResolveDate column in IncidentsSnapshotV2 table from ICMDataWarehouse source having  Timestamp(UTC) values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,Severity,Direct mapping to Severity column in IncidentsSnapshotV2 table from ICMDataWarehouse source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,SRNumber,Direct mapping to IncidentId column in IncidentsSnapshotV2 table from ICMDataWarehouse source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,Status,Direct mapping to Status column in IncidentsSnapshotV2 table from ICMDataWarehouse source having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimicmsrsnapshot,SupportSRId,Direct mapping to SupportTicketId in IncidentsSnapshotV2 table from ICMDataWarehouse source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimidletimespan,IdleTimeL1,"The attribute has static values of  >= 7Days <14Days , < 5hrs , >= Day <3Days , >= 21Days <31Days , Unknown , decided by commercial business and uploaded through flat file.",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,Updated,
UDPCommercial_NRT,vwdimidletimespan,IdleTimeL2,"The attribute has static values of  >= 7Days <14Days , <1Day , >= 21Days <31Days , >= 1Day <3Days , Unknown ,decided by commercial business and uploaded through flat file.",Ok,refer row #15 where attribute is IdleTimeL1 and entity is vwdimidletimespan,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimidletimespan,IdleTimeSpanKey,"SurrogateKey generated within UDP NRT to identify unique records of DimIdleTimeSpan table.
When IdleTimeL1 & IdleTimeL2 = ""Unknown"" and Sort=0 then hardcoded as -1
When IdleTimeL1 ='< 5hrs' & IdleTimeL2 = '<1Day' and Sort=1 then hardcoded as 1
When IdleTimeL1 ='>= 5hrs <8hrs' & IdleTimeL2 = '<1Day' and Sort=1 then hardcoded as 2
When IdleTimeL1 ='>= 8hrs <16hrs' & IdleTimeL2 = '<1Day' and Sort=1 then hardcoded as 3
When IdleTimeL1 ='>= 16hrs <1Day' & IdleTimeL2 = '<1Day' and Sort=1 then hardcoded as 4
and goes on until it's hardcoded as 10.",Ok,Provide the logic for surrogate key generation like which columns ?,Ok,Ram,Have to discuss,
UDPCommercial_NRT,vwdimidletimespan,Sort,"This attribute has static values of (0,1,2,3,4) provided by Commercial Business.
When IdleTimeL1 & IdleTimeL2 = ""Unknown"" then hardcoded as 0
When IdleTimeL1 ='< 5hrs' & IdleTimeL2 = '<1Day' then hardcoded as 1
When IdleTimeL1 ='>= Day <3Days' & IdleTimeL2 = '>= 1Day <3Days' then hardcoded as 2
When IdleTimeL1 & IdleTimeL2 = '>= 3 Days <7Days' then hardcoded as 3
When IdleTimeL1 & IdleTimeL2 = '>= 7Days <14Days' then hardcoded as 4",Ok,refer row #15 where attribute is IdleTimeL1 and entity is vwdimidletimespan,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimirstatus,IRStatus,"This attribute has static values of (Low, Unknown, Medium, High, Missed) decided by commercial business and uploaded through flat file.",Ok,refer row #15 where attribute is IdleTimeL1 and entity is vwdimidletimespan,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimirstatus,IRStatusKey,"SurrogateKey generated within UDP NRT to identify unique records of DimIRStatus table.
Logic: When IRStatus = ""Unknown"" then hardcoded as -1
when IRStatus = ""Critical"" then hardcoded as 1
when IRStatus = ""Hi"" then hardcoded as 2
when IRStatus = ""Medium"" then hardcoded as 3
when IRStatus = ""Low"" then hardcoded as 4
when IRStatus = ""Met"" then hardcoded as 5
when IRStatus = ""Missed"" then hardcoded as 6",Ok,Provide the logic for surrogate key generation like which columns ?,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimkpistate,KPIState,"This attribute has static values of (Complete ,Unknown ,Cancelled, Missed, Pending) decided by commercial business and uploaded through flat file.",Ok,refer row #15 where attribute is IdleTimeL1 and entity is vwdimidletimespan,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimkpistate,KPIStateKey,"SurrogateKey generated within UDP NRT to identify unique records of dimkpistate table.
Logic: When KPIState = ""Unknown"" then hardcoded as -1
when KPIState = ""Cancelled"" then hardcoded as 1
when KPIState = ""Missed"" then hardcoded as 2
when KPIState = ""Pending"" then hardcoded as 3
when KPIState = ""Complete"" then hardcoded as 4",Ok,Provide the logic for surrogate key generation like which columns ?,"Hardcoded 1 or 2 on what condition? For which value it is 1 or 2 add the details.

SurrogateKey generated within UDP NRT to identify unique records of dimkpistate table. 
Logic: When KPIState = ""State1"" then hardcoded as 1 
when KPIState = ""State2"" then hardcoded as 2  
",Ram,Updated,
UDPCommercial_NRT,vwdimlabortimespan,LaborSpanKey,"SurrogateKey generated within UDP NRT to identify unique records of DimLaborTimeSpan table.
When LaborSpanL1 & LaborSpanL2 = ""Unknown"" and SortL1 & SortL2 = 0 then hardcoded as -1
When LaborSpanL1=""<100"", LaborSpanL2 = ""<50"" and SortL1 & SortL2 = 1 then hardcoded as 1
When LaborSpanL1=""<100"", LaborSpanL2 = ""<75"" and SortL1 = 2 & SortL2 = 1 then hardcoded as 2
When LaborSpanL1=""<100"", LaborSpanL2 = ""<100"" and SortL1 = 3 SortL2 = 1 then hardcoded as 3
When LaborSpanL1=""<200"", LaborSpanL2 = ""<150"" and SortL1 = 4 SortL2 = 2 then hardcoded as 4
and goes so on until it's hardcoded as 20",Ok,Provide the logic for surrogate key generation like which columns ?,Hardcoded 1 or 2 on what condition? For which value it is 1 or 2 add the details,Ram,Updated,
UDPCommercial_NRT,vwdimlabortimespan,LaborSpanL1,Direct mapping to LaborSpanL1 column coming from static source provided by commercial business.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimlabortimespan,LaborSpanL2,Direct mapping to LaborSpanL2 column coming from static source provided by commercial business.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimlabortimespan,SortL1,Direct mapping to SortL1 column coming from static source provided by commercial business.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimlabortimespan,SortL2,Direct mapping to SortL2 column coming from static source provided by commercial business.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimphase,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimphase,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimphase,Phase,Direct mapping to StateAnnotation column in Cases table coming from DFM Cornerstone source having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimphase,PhaseKey,SurrogateKey generated within UDP NRT to identify unique records of DimPhase table.It is generated based on StateAnnotation column.,,Provide the logic for surrogate key generation like which columns ?,Add source table and souce name,Ram,Updated,
UDPCommercial_NRT,vwdimscopeagespan,ScopeAgeSpan,"This attribute has static values of (Unknown,<1 Hour,1-3 Hours etc) provided by the commercial business.",Ok,refer row #15 where attribute is IdleTimeL1 and entity is vwdimidletimespan,,Ram,Updated,
UDPCommercial_NRT,vwdimscopeagespan,ScopeAgeSpanKey,"SurrogateKey generated within UDP NRT to identify unique records of DimScopeAgeSpan table.
Logic: When ScopeAgeSpan = ""Unknown"" then hardcoded as -1
when ScopeAgeSpan = ""<1 Hour"" then hardcoded as 1
when ScopeAgeSpan = ""1-3 Hours"" then hardcoded as 2
when ScopeAgeSpan = ""3-7 Hours"" then hardcoded as 3
when ScopeAgeSpan = ""7-10 Hours"" then hardcoded as 4
when ScopeAgeSpan = ""10-15 Hours"" then hardcoded as 5
when ScopeAgeSpan = ""15-20 Hours"" then hardcoded as 6
when ScopeAgeSpan = ""20-24 Hours"" then hardcoded as 7
when ScopeAgeSpan = ""> 24 hours"" then hardcoded as 8",Ok,Provide the logic for surrogate key generation like which columns ?,Ref rno - 27,Ram,Updated,
UDPCommercial_NRT,vwdimsovereignsr,SRNumber,Direct mapping of CaseNumber column in Cases table coming from DFM Events data processed by Cornerstone.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,Avdaily,"Derived by applying decode logic on FullDate and IsWeekday columns of DimTime table coming from Commercial NextDay Datamart within SA&DP source having integer values.
Logic:  If FullDate is less than or equal to the current timestamp and IsWeekday is equal to 1 then it hardcoded 1 else hardcoded as 0.",Ok,Ok,Add source table name,Ram,Updated,
UDPCommercial_NRT,vwdimtime,CalendarMonth,Direct mapping to CalendarMonth column from DimTime table coming from Commercial NextDay Datamart within SA&DP Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,CalendarMonthName,Direct mapping to CalendarMonthName column from DimTime table coming from Commercial NextDay Datamart within SA&DP Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,Day,"Derived by applying Day logic on Fulldate columns coming in DimTime table coming from Commercial NextDay Datamart within SA&DP Datamart within SA&DP.
Logic:  Extract the Day (Monday,..) from the date value coming in Fulldate.",Ok,"Instead of updating DATE TRUNCATE function in the logic, explain like below:
Extract the Day (Monday,..) from the date value coming in Fulldate.",Instead of ND mention it as Commercial NextDay Datamart within SA&DP / UDPCOmmercial NextDay Datamart,Ram,Updated,
UDPCommercial_NRT,vwdimtime,DayId,"Derived by applying decode logic on DayName column in DimTime table coming from Commercial NextDay Datamart within SA&DP Datamart within SA&DP.
Logic: WHEN DayName = 'saturday' THEN hardcoded as 1   WHEN DayName = 'sunday' THEN hardcoded as 2
WHEN DayName = 'monday'  THEN hardcoded as 3  WHEN DayName = 'tuesday'  THEN hardcoded as 4
WHEN DayName = 'wednesday'  THEN hardcoded as 5  WHEN DayName = 'thursday' THEN hardcoded as 6
WHEN DayName = 'friday'  THEN hardcoded as 7 ELSE - 1  END AS DayId",Ok,Refer row #37 where attribute is FiscalCumulativeWeek,Instead of ND mention it as Commercial NextDay Datamart within SA&DP / UDPCOmmercial NextDay Datamart,Ram,Updated,
UDPCommercial_NRT,vwdimtime,DayName,Direct mapping to DayName in DimTime table coming from Commercial NextDay Datamart within SA&DP Datamart within SA&DP having string values.,Ok,Remove ectra wording column,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalCumulativeMonth,Direct mapping to FiscalCumulativeMonth column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalCumulativeWeek,"Derived by applying decode logic on FiscalWeek and FiscalYear columns coming from DimTime table coming from Commercial NextDay Datamart within SA&DP source.
Logic: CASE WHEN Length(FiscalWeek) = 1 THEN Cast(CONCAT ( FiscalYear ,0,FiscalWeek) AS INT)
ELSE Cast(CONCAT ( FiscalYear ,FiscalWeek ) AS INT) END AS FiscalCumulativeWeek",Ok,"Format of logic is missing, you can follow like below
Logic: CASE WHEN Length(FiscalWeek) = 1  THEN Cast(CONCAT ( FiscalYear ,0,FiscalWeek) AS INT) 
ELSE Cast(CONCAT ( FiscalYear ,FiscalWeek ) AS INT) 
END AS FiscalCumulativeWeek",,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalMonthName,Direct mapping to FiscalMonthName in DimTime table coming from Commercial NextDay Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalMonthOfYear,Direct mapping to FiscalMonthOfYear in DimTime table coming from Commercial NextDay Datamart within SA&DP having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalQuarter,"Direct mapping to FiscalQuarter column in DimTime table coming from Commercial NextDay Datamart within SA&DP having integer values.
(Ex:For FiscalPeriod Value as 1(july-september) then FiscalQuarter is populated as - 2007-07-01T00:00:00.000+0000,
For FiscalPeriod Value as 2(October-december) then FiscalQuarter is populated as- 2007-10-01T00:00:00.000+0000,
For FiscalPeriod Value as 3(January-march) then FiscalQuarter is populated as- 2008-01-01T00:00:00.000+0000,
For FiscalPeriod Value 4(april- june) then FiscalQuarter is populated as-2008-04-01T00:00:00.000+0000)",Ok,"Phrase the description properly for red highlighted. Mention the month range for value 1 to 4 for any year.
Can refer for Example : Value 1 corrosponds to July  to Sept and so on..",,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalQuarterName,Direct mapping to FiscalQuarterName column in DimTime table coming from Commercial NextDay Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalWeek,Direct mapping to FiscalWeek column in DimTime table coming from Commercial NextDay Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalWeekName,Direct mapping to FiscalWeekName column in DimTime table coming from Commercial NextDay Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalWeekOfMonth,Direct mapping to FiscalWeekOfMonth column in DimTime table coming from Commercial NextDay Datamart within SA&DP having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalYear,Direct mapping to FiscalYear column coming in DimTime table coming from Commercial NextDay Datamart within SA&DP source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FiscalYearName,Direct mapping to FiscalYearName column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having string values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,FullDate,Direct mapping to FullDate column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having timestamp values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,IsCurrentFiscalMonth,Direct mapping to IsCurrentFiscalMonth column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,Ok,On what column this is being dervied and derivation logic is not clear,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimtime,IsCurrentFiscalWeek,Direct mapping to IsCurrentFiscalWeek column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,Ok,On what column this is being dervied and derivation logic is not clear,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimtime,IsCurrentFiscalYear,Direct mapping to IsCurrentFiscalYear column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,Ok,On what column this is being dervied and derivation logic is not clear,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimtime,IsWeekday,Direct mapping to IsWeekday column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,Ok,On what column this is being dervied and derivation logic is not clear,Ok,Ram,Updated,
UDPCommercial_NRT,vwdimtime,ReportingWeekStart,Direct mapping to ReportingWeekStartDate in DimTime table coming from Commercial NextDay Datamart within SA&DP having Timestamp(UTC) values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,ReportingWeekStartID,Direct mapping to ReportingWeekStartDate column in DimTime table coming from Commercial NextDay Datamart within SA&DP having TimeStamp(UTC) values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtime,TimeId,Direct mapping of TimeId column in DimTime table coming from Commercial NextDay Datamart within SA&DP source having integer values.,Ok,Ok,,Ram,Updated,
UDPCommercial_NRT,vwdimtimeofday,Seconds,"This attribute has static values of (-1, 1799, 3599, 5399, 7199 etc) provided by Commercial Business.
When TimeOfDayId= -1, TimeOfDay3Hrs= 'Unknown' AND TimeOfDay1Hr= 'Unknown' then hardcoded as -1
When TimeOfDayId= 0, TimeOfDay3Hrs= '00:00 To 02:59' AND TimeOfDay1Hr= '00:00 To 00:59' then hardcoded as 1799
When TimeOfDayId= 1, TimeOfDay3Hrs= '00:00 To 02:59' AND TimeOfDay1Hr= '00:00 To 00:59' then hardcoded as 3599
When TimeOfDayId= 2, TimeOfDay3Hrs= '00:00 To 02:59' AND TimeOfDay1Hr= '01:00 To 01:59' then hardcoded as 5399
When TimeOfDayId= 3, TimeOfDay3Hrs='00:00 To 02:59' AND TimeOfDay1Hr= '01:00 To 01:59' then hardcoded as 7199
goes on until it's hardcoded as 86399",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,,
UDPCommercial_NRT,vwdimtimeofday,TimeOfDay1Hr,"This attribute has static values of ('Unknown', '00:00 To 00:59', '00:00 To 00:59', '01:00 To 01:59', '01:00 To 01:59' etc) provided by Commercial Business.
When TimeOfDayId= -1 AND TimeOfDay3Hrs= 'Unknown' then hardcoded as 'Unknown'
When TimeOfDayId= 0 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '00:00 To 00:59'
When TimeOfDayId= 1 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '00:00 To 00:59'
When TimeOfDayId= 2 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '01:00 To 01:59'
When TimeOfDayId= 3 AND TimeOfDay3Hrs='00:00 To 02:59' then hardcoded as '01:00 To 01:59'
goes on until it's hardcoded as '23:00 To 23:59'",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,,
UDPCommercial_NRT,vwdimtimeofday,TimeOfDay30mins,"This attribute has static values of ('Unknown', '00:00 To 00:29', '00:30 To 00:59', '01:00 To 01:29', '01:30 To 01:59' etc) provided by Commercial Business.
When TimeOfDayId= -1 AND TimeOfDay3Hrs= 'Unknown' then hardcoded as 'Unknown'
When TimeOfDayId= 0 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '00:00 To 00:29'
When TimeOfDayId= 1 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '00:30 To 00:59'
When TimeOfDayId= 2 AND TimeOfDay3Hrs= '00:00 To 02:59' then hardcoded as '01:00 To 01:29'
When TimeOfDayId= 3 AND TimeOfDay3Hrs='00:00 To 02:59' then hardcoded as '01:30 To 01:59'
goes on until it's hardcoded as 23:30 To 23:59'",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,,
UDPCommercial_NRT,vwdimtimeofday,TimeOfDay3Hrs,"This attribute has static values of ('Unknown', '00:00 To 02:59' etc) provided by Commercial Business.
When TimeOfDayId= -1 AND TimeOfDay1Hr= 'Unknown' then hardcoded as 'Unknown'
When TimeOfDayId= 0, AND TimeOfDay1Hr= '00:00 To 00:59' then hardcoded as '00:00 To 02:59'
When TimeOfDayId= 1, AND TimeOfDay1Hr= '00:00 To 00:59' then hardcoded as '00:00 To 02:59'
When TimeOfDayId= 2, AND TimeOfDay1Hr= '01:00 To 01:59' then hardcoded as '00:00 To 02:59'
When TimeOfDayId= 3, AND TimeOfDay1Hr= '01:00 To 01:59' then hardcoded as '00:00 To 02:59'
goes on until it's hardcoded as '21:00 To 23:59'",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,,
UDPCommercial_NRT,vwdimtimeofday,TimeOfDayId,"SurrogateKey generated within UDP NRT to identify unique records of DimTimeOfDay table.
When TimeOfDay3Hrs= 'Unknown' AND TimeOfDay1Hr= 'Unknown' AND Seconds= -1 then hardcoded as -1
When TimeOfDay3Hrs= '00:00 To 02:59' TimeOfDay1Hr= '00:00 To 00:59' AND Seconds= 1799 then hardcoded as 0
When TimeOfDay3Hrs= '00:00 To 02:59' TimeOfDay1Hr= '00:00 To 00:59' AND Seconds= 3599 then hardcoded as 1
When TimeOfDay3Hrs= '00:00 To 02:59' TimeOfDay1Hr= '01:00 To 01:59' AND Seconds= 5399 then hardcoded as 2
When TimeOfDay3Hrs='00:00 To 02:59' TimeOfDay1Hr= '01:00 To 00:59' AND Seconds= 7199 then hardcoded as 3
goes on until it's hardcoded as 47",Ok,Provide the logic for surrogate key generation like which columns ?,Ok,Ram,,
UDPCommercial_NRT,vwdimtimespan,TimeSpan,"This attribute has static values of (""Unknown"",'<1Day',1-<3 Days, 3-<7 Days etc) provided by Commercial Business.
When TimeSpanKey = -1 then hardcoded as ""Unknown""
When TimeSpanKey = 1 then hardcoded as '<1Day'
When TimeSpanKey = 2 then hardcoded as 1-<3 Days
When TimeSpanKey = 3 then hardcoded as 3-<7 Days
When TimeSpanKey = 4 then hardcoded as 7-<14 Days",Ok,"pls confirm, is it static values or hardcoded ?
If it is static, it has to be coming from a static file provided by business.",Ok,Ram,,
UDPCommercial_NRT,vwdimtimespan,TimeSpanKey,"SurrogateKey generated within UDP NRT to identify unique records of DimTimeSpan table.
When TimeSpan = ""Unknown"" then hardcoded as -1
When TimeSpan = '<1Day' then hardcoded as 1
When TimeSpan = '1-<3 Days' then hardcoded as 2
When TimeSpan = '3-<7 Days' then hardcoded as 3
When TimeSpan = '7-<14 Days' then hardcoded as 4
goes on until it's hardcoded till 8.",Ok,Provide the logic for surrogate key generation like which columns ?,Ref rno - 27,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,AgentIdUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,AssignmentPending,Direct Mapping to AssignmentPending column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,CreatedBy,Direct Mapping to CreatedBy column in CollaborationTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,CreatedDateTime,Direct Mapping to CreatedOn column in CollaborationTask table coming  from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,CurrentEmployee,Direct Mapping to AssignedTo of column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EntityAction,Direct Mapping to EntityAction column in CollaborationTask Table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EntityType,Direct Mapping to EntityType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EntityURI,Direct Mapping to EntityURI column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EventDateTime,Direct Mapping to EventDateTime column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,EventType,Direct Mapping to EventType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,InternalTitle,Direct mapping to InternalTitle column  from Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in Collaboration table coming from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' Then TRUE Else FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,IsM365SR,Direct Mapping to IsM365 column in CollaborationTask table from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in Collaboration table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the Collaboration Event table where the routing is done
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,RoutingContextId,Direct Mapping to RoutingContextId column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,SAPKey,This is a reference key to the DimSupportAreaPath table to get more details about Support area path. This key is populated by joining SupportAreaPathID in DimSupportAreaPath table coming from Commercial NextDay Datamart within SA&DP with SAPID in Cases table coming from  DFM Events data processed by Cornerstone to pick DimSupportAreaPath.SAPKey.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,SRCurrentSeverity,Direct Mapping to column Severity  in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,SRNumber,Direct Mapping to CaseNumber column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,SRStateAnnotation,Direct mapping to StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,SupportAreaPathId,Direct Mapping to SAPId (Support Area Path Id) column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,TaskAgeDays,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in CollaborationTask table coming from DFM Events data processed by Cornerstone.
Logic:-  CASE WHEN State IN ('closedcompleted','closedcancelled') 
THEN it calcuate time difference between StateLastUpdatedDateTime and CreatedDateTime columns
ELSE it calcuate time difference between CURRENT_TIMESTAMP() and CreatedDateTime columns
END AS TaskAgeDays",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,TaskClosedDateTime,Direct mapping of ClosedDateTime column from Cases table coming from DFM source from having Timestamp(UTC) values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,TaskFirstAssignmentDateTime,"Derived by applying decode logic on EventDateTime, EntityAction columns in Collaboration table coming from DFM Events data processed by Cornerstone source.
Logic: It is populated by taking minimum value of EventDateTime When EntityAction = 'TaskAssignedToAgent ' from CollaborationTask table from DFM Events data processed by Cornerstone source.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,TaskId,Direct mapping to id column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,TaskState,Direct mapping to State column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,UpdatedBy,Direct Mapping to UpdatedBy column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcollaborationtasks,UpdatedDateTime,Direct Mapping to UpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,CESBILastUpdatedDatetime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,CreatedDateTime,Direct mapping to CreateDateTime column in CustomerScheduledCallbackTime table coming from Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,IsCSCSR,Direct mapping to IsCSCTicket column in CustomerScheduledCallbackTime table coming from Amplify source having boolean values .,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,LastModifiedDateTime,Direct mapping to LastModifiedDate column in CustomerScheduledCallbackTime table coming from Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,LastUpdatedDateTime,Direct mapping to LastUpdatedTime column in CustomerScheduledCallbackTime table coming from Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,ReminderDateTime,Direct mapping to ReminderDateTime column in CustomerScheduledCallbackTime table coming from Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,SRNumber,Direct mapping to TicketNumber column in CustomerScheduledCallbackTime table coming from Amplify source having Integer values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactcustomerscheduledcallbacktime,Status,Direct mapping to Status  column in CustomerScheduledCallbackTime table coming from Amplify source having integer values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactprecommunicationrequest,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,CommunicationType,Direct mapping to CommunicationType  column in SupportRequestPreCommunication table coming from Amplify source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,CreatedDateTime,Direct mapping to CreateDateTime  column in SupportRequestPreCommunication table coming from Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,CwsId,Direct mapping to CwsId column in SupportRequestPreCommunication table coming from upstream Amplify source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,IsInternal,Direct mapping to IsInternal column in SupportRequestPreCommunication table coming from upstream Amplify source having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,IsMailSent,Direct mapping to IsMailSent  column in SupportRequestPreCommunication table coming from upstream Amplify source having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,LastUpdatedDateTime,Direct mapping to LastUpdatedTime  column in SupportRequestPreCommunication table coming from upstream Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,MessageId,Direct mapping to MessageId column in SupportRequestPreCommunication table coming from upstream Amplify source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,ReceivedDateTime,Direct mapping to ReceivedDateTime column in SupportRequestPreCommunication table coming from upstream Amplify source having Timestamp(UTC) values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,RequestId,Direct mapping to RequestId  column in SupportRequestPreCommunication table coming from upstream Amplify source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactprecommunicationrequest,UpdatedByApp,Direct mapping to LastUpdatedByApp column in SupportRequestPreCommunication table coming from upstream Amplify source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,AcknowledgeDateTime,Direct Mapping to AcknowledgeDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,AgentEmail,Direct Mapping to AgentEmail  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,AppliedActionId,Direct Mapping to AppliedActionId column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,BugURL,Direct Mapping to BugURL column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CallMeNow,Direct Mapping to CallMeNow column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CBRTag,Direct Mapping to Complex  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CESBICreatedDateTime,Timestamp in UTC at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CESBILastUpdatedDateTime,Timestamp in UTC at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ClosedDateTime,Direct Mapping to ClosedDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source  having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CloudFilter,"Derived by applying decode logic on EXTENSIONATTRIBUTESSR,  SupportAreaNames columns in SupportRequestDetailsSIPv2 Table loaded from Rave data processed by Amplify Source.
Logic: If EXTENSIONATTRIBUTESSR=1 OR SupportAreaNames like '%OnPrem%'  then Hardcoded as ""On-Prem"" ELSE  Hardcoded as ""Cloud""",Ok,Use Decode Logic Format- Derived by applying decode logic to columns in tables  from source-,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CompletedDateTime,Direct Mapping to CompletedDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source  having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ContactOutcome,Direct Mapping to Contact Outcome column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CreatedDateTime,Direct Mapping to CreateDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Critsits,Direct Mapping to Critsits column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CSATScore,"Derived by applying decode logic based on Rating column  in SupportRequestDetailsSIPv2 Table  loaded from Rave data processed by Amplify source.
Logic: If Rating = 5 THEN hardcoded as 200 ,Rating = 4 THEN hardcoded as 100 ,If Rating = 3 THEN hardcoded as 100, If Rating = 2 THEN hardcoded as 0 ,If Rating = 1 then hardcoded as 0 else null end as CSATscore.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerCompanyType,Direct Mapping to CustomerCompanyType column in SupportRequestDetailsSIPv2 table coming from Amplify source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerContactedDateTime,Direct Mapping to CustomerContactedDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerCountry,This is a reference to DimGeography table to get details about the CustomerCountry. This CustomerCountry is populated by DimGeography.ISOCountryShortName by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from UDP Commercial NextDay Datamart within SA&DP.,"Ok
Refer col G for review comment",Provide source as UDPCommercial. Also provide the joining condition.,"THis is an indirect mapping to DimGeo.
Mention it accordingly and the join logic",Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerFeedbackDateTime,Direct Mapping to CustomerFeedbackDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerGeographyKey,This is a reference key to DimGeography table to get details about the CustomerGeographyKey. This key is populated by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from Commercial NextDay Datamart within SA&DP.,Ok,Ok,In join logic DimGeo is not used,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerGeographyLevel1Name,This is a reference to DimGeography table to get details about the CustomerGeographyLevel1Name. This DimGeography.CustomerGeographyLevel1Name is populated by GeographyLevel1Name by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from UDP Commercial NextDay Datamart within SA&DP.,"Ok
Refer col G for review comment",Provide source as UDPCommercial. Also provide the joining condition.,Ref rno - 143,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerGeographyLevel2Name,This is a reference to DimGeography table to get details about the CustomerGeographyLevel2Name. This CustomerGeographyLevel2Name is populated by DimGeography.GeographyLevel2Name by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from UDP Commercial NextDay Datamart within SA&DP.,"Ok
Refer col G for review comment",Provide source as UDPCommercial. Also provide the joining condition.,Ref rno - 143,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerGeographyLevel3Name,This is a reference to DimGeography table to get details about the CustomerGeographyLevel3Name. This CustomerGeographyLevel3Name is populated by DimGeography.GeographyLevel3Name by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from UDP Commercial NextDay Datamart within SA&DP.,"Ok
Refer col G for review comment",Provide source as UDPCommercial. Also provide the joining condition.,Ref rno - 143,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerGeographyLevel4Name,This is a reference to DimGeography table to get details about the CustomerGeographyLevel4Name. This CustomerGeographyLevel4Name is populated by DimGeography.GeographyLevel4Name by joining the TenantCountry  in SupportRequestDetailsSIPv2 table coming from Amplify source with ISOCountryShortCode in the DimGeography table coming from UDP Commercial NextDay Datamart within SA&DP.,"Ok
Refer col G for review comment",Provide source as UDPCommercial. Also provide the joining condition.,Ref rno - 143,Ram,,
UDPCommercial_NRT,vwfactraverequest,CustomerWaitMinutes,Direct Mapping to CustomerWait_Minutes (Minutes) column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having decimal values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,DeliveryRegion,"Derived by applying decode logic on Skillids column  in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source.
Logic: IF Skillids like '%,458754,%' THEN hardcoded as 'NOAM'
  WHEN Skillids like '%,458752,%' THEN hardcoded as 'EMEA'
  WHEN Skillids like '%,458755,%' THEN hardcoded as 'LATAM'
  WHEN Skillids like '%,458753,%' THEN hardcoded as 'APGC' ",Ok,Refer row #37 where attribute is FiscalCumulativeWeek,OK,Ram,,
UDPCommercial_NRT,vwfactraverequest,DeliverySubType,Direct Mapping to DeliverySubType  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String  values.,Ok,"What is the source table for MDM rules. Mention -""Business rules in form of Case When Conditions.""",what is the significance of - reference table DimDeliveryType. Is it a  source table? Not clear,Ram,,
UDPCommercial_NRT,vwfactraverequest,DeliveryType,This is reference key to the DimDeliveryType to get more details about DeliveryType. This DeliveryType is populated by joining DeliverySubType in DimDeliverySubType table with DeliverySubType in SupportRequestDetails table both the tables are coming from Rave data processed by Amplify source.,Ok,"What is the source table for MDM rules. Mention -""Business rules in form of Case When Conditions.""",what is the significance of - reference table DimDeliveryType. Is it a  source table? Not clear,Ram,,
UDPCommercial_NRT,vwfactraverequest,DeliveryTypeKey,This is reference key to the DimDeliveryType to get more details about DeliveryTypeKey. This DeliveryTypeKey is populated by joining DeliverySubType in DimDeliverySubType table with DeliverySubType in SupportRequestDetails table both the tables coming from Rave data processed by Amplify source.,Ok,Ok,Paraphrasing is not appropriate,Ram,,
UDPCommercial_NRT,vwfactraverequest,DirectAgentOfferRouting,Direct Mapping to DirectAgentOfferRouting column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,EmployeeKey,This is refrencekey to the EmployeeKey to get more details about the DimEmployee. This key is populated by joining PartnerID in FactRequestNRT table coming from Commercial NRT Datamart within SA&DP \with NativeAgentID in DimEmployeeMapping table coming from UDP Common Database for dynamics cases. ,Ok,Ok,"Maintain the same pattern for similar attributes(phrasing is diffint red as compared to other ref key attributes).
Logic paraphrasing is also not clear.",Ram,,
UDPCommercial_NRT,vwfactraverequest,EntitlementId,Direct Mapping to EntitlementId column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,EscalationId,Direct Mapping to EscalationId column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,EscalationStatus,Direct Mapping to EscalationStatus column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,EscalationTeam,Direct Mapping to EscalationTeam column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,FeedbackModality,Direct Mapping to FeedbackModality column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source  having string values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,FinalTheme,Direct Mapping to FinalTheme  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,FirstEmailSentDateTime,Direct Mapping to FirstEmailSentDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,FiscalMonthName,Direct Mapping to FiscalMonthName column in DimTime Table coming from UDPCommercial Next Day having string values.,Ok,Mention Source as UDPCommercial,Ok,Ram,,
UDPCommercial_NRT,vwfactraverequest,FiscalPeriod,Direct Mapping to FiscalPeriod column in DimTime Table coming from UDPCommercial Next day having Integer values.,Ok,Mention Source as UDPCommercial,Ok,Ram,,
UDPCommercial_NRT,vwfactraverequest,FiscalYear,Direct Mapping to column FiscalYear column in SupportRequestDetails table coming from source DFM Cornerstone.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,FQRmins,"Derived using AcknowledgeDateTime and CreateDateTime columns  in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source. 
Logic: We take Minutes difference between AcknowledgeDateTime and CreateDateTimec columns.",Ok,Don't mention the Date_Diff function. Provide the explanation of logic in Simple english For Ex-> Derived by calculating the time difference of.....,Ok,Ram,,
UDPCommercial_NRT,vwfactraverequest,HasSurvey,"Derived by applying decode logic on Rating column  in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify.
Logic: If Rating  IS NOT NULL THEN 1 ELSE 0 END.",Ok,Remove SR. and mention the Whole table name.,Ok,Ram,,
UDPCommercial_NRT,vwfactraverequest,HasVerbatim,"Derived by applying decode logic on CustomerFeedbackDateTime and Comment columns in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source.
Logic: IF CustomerFeedbackDateTime IS NOT NULL AND Comment IS NOT NULL AND Comment NOT LIKE '&#%' AND Comment not equal to 'null' AND Comment not equal to 'sovereignscrubbed'
AND Comment not equal to 'unspecified' THEN True ELSE False",Ok,Ok,Paraphrasing is not appropriate,Ram,,
UDPCommercial_NRT,vwfactraverequest,InboundLastEmailRecieveDateTime,Direct Mapping to InboundLastEmailRecieveDateTime column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source  having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,InternalState,Direct Mapping to InternalState column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,InternalTitle,Direct Mapping to InternalTitle column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Isactive,"Hardcoded as ""1"". 1 Stands Active.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsCEnS,"Derived by applying decode logic on ChannelOrgCode,FunctionHierarchyKey,ChannelOrgSummaryName, IsCEnS columns DimFunctionHierarchy table coming from MDM source. 
Logic:
          If lower(ChannelOrgCode)='b20e' Then true
          If FunctionHierarchyKey=-1 or ChannelOrgSummaryName='Unknown' or FunctionHierarchyKey is Null THEN
              CASE 
              If   MDM.IsCEnS is not null then Cast(MDM.IsCEnS as Boolean)
              Else true
              END
         WHEN lower(ChannelOrgCode)<>'b20e' Then false
          Else true
          END AS IsCEnS ",Ok,Refer the example provided in Guidelines for this column.,Paraphrasing is not appropriate,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsCloudSR,Direct Mapping to IsCloudServiceRequest column coming from DimSupportServiceRequest table coming from Rave data processed by Amplify Source having boolean values.,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsEdu,Direct Mapping to HasEDU  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having  Boolean values.,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsEU,"Derived by applying decode logic on TenantCountry column in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source. 
Logic:  IF TenantCountry IN ('is','li','no','ch','at','be','hr','cy','cz','dk','ee','fi','fr','de','gr','hu','ie','it','lv','lt','lu','mt','nl','pl','pt','ro','sk','si','es','se') THEN True ELSE False END AS IsEU",Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsEveCritsit,Direct Mapping to EveCritsit column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having boolean values.,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsNewSR,Direct Mapping to NewTicket  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having boolean values.,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsPartnerSR,Direct Mapping to IsPartnerServiceRequest column DimSupportServiceRequest table coming from Rave data processed by Amplify Source having boolean values.,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsPTSolve,Direct Mapping to IsPTSolve column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having boolean values. ,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsResolved,Direct Mapping to IsResolved column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having boolean values ,Ok,OK,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsStrategicFlag,"Derived by applying decode logic on SponsoredStrategicFlag colum in  DimCalc table loaded from Commercial NextDay Datamart within SA&DP. 
Logic:IF SponsoredStrategicFlag IS NULL THEN 'No' ELSE SponsoredStrategicFlag END AS IsStrategicFlag.",Ok,Provide source.  Remove TP. or use the Full table name and follow indentation.,Use the std for case-when : decode,Ram,,
UDPCommercial_NRT,vwfactraverequest,IsValidFeedback,Direct Mapping to IsValidFeedback column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having  boolean values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,IVROutboundCallDateTime,Direct Mapping to IVROutboundCallTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,LastActionEndDateTime,Direct Mapping to LastActionTimeEnd column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having timestamp values in UTC..,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,LastEmailSentDateTime,Direct Mapping to LastEmailSentDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,LastUpdatedDateTime,Direct Mapping to LastUpdatedTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,MaxSeverity,Direct Mapping to MaxSeverity  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Modality,Direct Mapping to Modality column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,OneCloudUsed,Direct Mapping to OneCloud Used column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,OrganizationId,Direct Mapping to OrganizationId column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,OrganizationName,This is a reference attribute to DimDeliveryOrganization table to get more details about the Organization. The Organization column is populated by joining the DeliveryOrganizationId  in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source with OrganizationId in the DimDeliveryOrganization table coming from Commercial NextDay Datamart within SA&DP.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ParentRequestId,Direct Mapping to ParentRequestId column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,PartnerId,Direct Mapping to PartnerId column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source  having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,PartnerTenantId,Direct Mapping to PartnerTenantId column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,PlanningCategoryKey,"This column is an indirect mapping derived from two sources:  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source and the static RavePlanningCategories table. It's mapped based on the CaseType,IssueType, TenantName ,ProgramId columns from the SupportRequestDetailsSIPv2 table, and the values are obtained through specific joins involving key columns like ""SupportAreaName,"" ""OrganizationId,"" and ""RequestId.""

","Ok
It seems to be a FK/ref key -- Indirect Mapping Complex Lookup Description Updated","Provide the table name in MDM. Mention ""Business rules"".",Paraphrasing is not appropriate,Ram,,
UDPCommercial_NRT,vwfactraverequest,ProactiveScenario,Direct Mapping to ProactiveScenario column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ProgramId,Direct Mapping to ProgramId column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,QualifiedWaitTimeFilter,Direct Mapping to QualifiedWaitTimeFilter column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Rating,Direct Mapping to Rating column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RaveEscalation,Direct Mapping to RaveEscalation column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ReopenPath,Direct Mapping to ReopenedPath of column in SupportRequestDetailsSIPv2 table from Rave data processed by Amplify Source  having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ReopenReason,Direct Mapping to ReopenReason column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RequestAgeDays,Direct Mapping to RequestAge_Days column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having  integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RequestId,Direct Mapping to RequestId column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RequestIsRavetoSD,Direct Mapping to RaveRequestIsRavetoSD column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Resolution,Direct Mapping to Resolution column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ResolutionOutcome,Direct Mapping to ResolutionOutcome column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RouteDateTime,Direct Mapping to RouteDateTime column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,RouteMinutes,"Derived by applying decode logic on RouteDateTime and CreateDateTime columns in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source.
Logic: We take minutes difference between RouteDateTime and CreateDateTime columns.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SeatBucket,Direct Mapping to SeatBucket column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SecondarySRNumber,Direct Mapping to SecondaryTicketnumber column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SecondarySRType,Direct Mapping to SecondaryTicketType column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ServiceName,Direct Mapping to ServiceName column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ServiceOffering,"Derived by applying decode logic based on SubscriptionType, SkillIds, SupportAreaNames and ProgramId columns in SupportRequestDetailsSIPv2 Table  loaded  from Rave data processed by Amplify source. Logic:  If SubscriptionType=1 OR SupportAreaNames LIKE 'premier%' OR SkillIds LIKE '%393216%' OR SkillIds LIKE '%589824%'  OR SkillIds LIKE '%589825%' OR ProgramId='5c44c5ec-5fd4-4e45-ab0d-dd9156d1bde9' AND (SubscriptionType not equals to  2 OR SubscriptionType IS NULL) THEN 'Premier' WHEN SupportAreaNameL1= 'proactive' THEN 'Proactive'  ELSE 'Non-Premier'. END AS ServiceOffering",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,ServiceOfferingKey,"Derived by applying decode logic on SupportAreaName, SubscriptionType, SkillIds and ProgramId columns in SupportRequestDetailsSIPv2_INC table coming from Rave data processed by Amplify Source.
Logic: CASE WHEN  SupportAreaName = 'proactive' THEN hardcoded as 1 
        WHEN SupportAreaName Like 'premier%' AND SubscriptionType = 2 THEN hardcoded as 2
        WHEN SkillIds Like ('%589825%' or '%393216%' or '%589824%') AND (SubscriptionType IS NULL or not equal to 2) THEN hardcoded as 2 
        WHEN ProgramId = '5c44c5ec-5fd4-4e45-ab0d-dd9156d1bde9' AND (SubscriptionType IS NULL or not equal to 2) THEN hardcoded as 2
        ELSE 3 END AS ServiceOfferingKey",Are we getting ServiceOfferingKey from source itself? -- In Source having RaveServiceOfferingKey . (It's a same table reference attribute : Indirect Mapping),Mention source for FactRequest table,03/08: Looks good.,Ram,,
UDPCommercial_NRT,vwfactraverequest,Severity,Direct Mapping to Severity column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SkillIds,Direct Mapping to SkillIds column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having  String values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SkillType,Direct Mapping to Skill Type column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Source,Direct Mapping to Source column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SRLanguage,Direct Mapping to TicketLanguage column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SRNumber,Direct Mapping to TicketNumber column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SRStatus,Direct Mapping to CaseStatus column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,State,Direct Mapping to State column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SubOrg,Direct Mapping to SubOrg columns from  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SubscriptionType,Direct Mapping to SubscriptionType columns from  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having  integer  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SummaryTags,Direct Mapping to SummaryTags column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source  having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SupplierName,Direct Mapping to SupplierName column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SupportArea,Direct Mapping to SupportArea column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SupportAreaName,Direct Mapping to SupportAreaName column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,SurveyCategories,Direct Mapping to SurveyCategories  column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Surveys,Direct Mapping to OneCloud Used column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Technology,This is a reference attribute to DimTheme table to get details of the Technology. Logic: Technology is populated by joining the Theme column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source with Theme column in the DimTheme table coming from Commercial NextDay Datamart within SA&DP.,Ok,"Mention like below
business rules in the form of case when statement applied on SupportAreaName provided and maintained by Modern Workspace business.",Review comment not addressed,Ram,,
UDPCommercial_NRT,vwfactraverequest,TenantCountry,Direct Mapping to TenantCountry column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,TenantId,Direct Mapping to TenantId column in  SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Theme,Direct Mapping to Theme column in vw_SupportTickets Table coming from Rave data processed by Amplify Source having String  values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,TimezoneOffsetInMinutes,Direct Mapping to ExtensionAttributesSR column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,TransactionalSurveyType,Direct Mapping to TransactionalSurveyType column in SupportRequestDetailsSIPv2 Table coming from Rave data processed by Amplify Source having string values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,TransferLocation,Direct Mapping to TransferLocation column in SupportRequestDetailsSIPv2 table from coming from Rave data processed by Amplify Sourcehaving String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactraverequest,Verbatim,Direct Mapping to Verbatim column in SupportRequestDetailsSIPv2 table coming from Rave data processed by Amplify Source having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,AcknowledgeDateTime,Direct mapping to AcknowledgeDateTime in SupportRequestDetails_NRT intermediate table having Timestamp(UTC) values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,AssignedStatus,"Derived by applying decode logic on PartnerId, State and AcknowledgeDateTime columns in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic: CASE WHEN PartnerId IS NULL OR AcknowledgeDateTime IS NULL AND STATE = 'active' THEN 'Unassigned' ELSE 'Assigned' END AS AssignedStatus",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CaseURL,"Derived by applying decode logic on TicketNumber column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic: Append ""https://rave.office.net/cases/"" and TicketNumber column together.",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CloudFilter,"Derived by applying decode logic on EXTENSIONATTRIBUTESSR,  SupportAreaNames columns in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic: If EXTENSIONATTRIBUTESSR=1 OR SupportAreaNames like '%OnPrem%'  then Hardcoded as ""On-Prem"" ELSE  Hardcoded as ""Cloud""",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CustomerCountryName,This is reference attribute to the DimGeography table to get more details about the ISOCountryShortName. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation) with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,"This SupportRequestDetails_NRT is enrichment file, can we mention as intermittent file in bracket?
Since it is applicable for all attributes can we update at entity level description ?",Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CustomerGeographyLevel1Name,This is reference attribute to the DimGeography table to get more details about the GeographyLevel1Name. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation) with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CustomerGeographyLevel2Name,This is reference attribute to the DimGeography table to get more details about the GeographyLevel2Name. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation) with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CustomerGeographyLevel3Name,This is reference attribute to the DimGeography table to get more details about the GeographyLevel3Name. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation) with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,CustomerGeographyLevel4Name,This is reference attribute to the DimGeography table to get more details about the GeographyLevel4Name. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation) with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,DeliveryRegion,Direct mapping to DeliveryRegion column in SupportRequestDetails_NRT intermediate table.,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,InternalState,Direct mapping to InternalState column in SupportRequestDetails_NRT  intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,IsCallMeNow,Direct mapping to CallMeNow column in SupportRequestDetails_NRT intermediate table having boolean values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,IsNewSR,Direct mapping to NewTicket column in SupportRequestDetails_NRT intermediate table having boolean values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,IsOneCloudUsed,Direct mapping to OneCloudUsed column in SupportRequestDetails_NRT intermediate table having  boolean values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,Modality,Direct mapping to Modality column in SupportRequestDetails_NRT intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,OrganizationId,Direct mapping to OrganizationId column in SupportRequestDetails_NRT intermediate table having String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,OrganizationName,Direct mapping to OrganizationName column in SupportRequestDetails_NRT intermediate table having String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,RaveSRUnassignedSnapshotKey,Surrogate key generated within UDP NRT to identify unique records of FactRaveUnAssignedSnapshot table. It is generated using RequestId column.,,Provide the logic for surrogate key generation like which columns ?,Add source table and source name,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,RequestAgeDays,Direct mapping to RequestAgeDays column in SupportRequestDetails_NRT intermediate table having integer values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,RequestId,Direct mapping to RequestId column in SupportRequestDetails_NRT intermediate table having String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,RouteDateTime,Direct mapping to RouteDateTime column in SupportRequestDetails_NRT intermediate table having timestamp(UTC) values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,RouteTimeBucket,"Derived by applying decode logic based on RouteDateTime and CreatedDateTime columns in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic:CASE 
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is <= 10 THEN hardcoded as '<=10 mins'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is in the range of (> 10 <= 30)mins THEN hardcoded as '10-30 mins'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is in the range of (> 30 <= 60)mins THEN hardcoded as '30-60 mins'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is in the range of (> 60 <= 120)mins THEN hardcoded as '60-120 mins'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is in the range of (> 120  <= 240)mins THEN hardcoded as '120-240 mins'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is in the range of (> 240 <= 1440)mins THEN hardcoded as '240 mins-1Day'
	WHEN time difference in minutes between RouteDateTime and CreateDateTime columns is '> 1440 mins' THEN hardcoded as '>1 Day'
ELSE 'Idle' END AS RouteTimeBucket",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SecondarySRNumber,Direct mapping to SecondaryTicketnumber column in SupportRequestDetails_NRT intermediate table having integer values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,ServiceOfferingName,"Derived by applying decode logic based on SubscriptionType, SkillIds, SupportAreaNames and ProgramId columns in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic:  If SubscriptionType=1 OR SupportAreaNames LIKE 'premier%' OR SkillIds LIKE '%393216%' OR SkillIds LIKE '%589824%'  OR SkillIds LIKE '%589825%' OR ProgramId='5c44c5ec-5fd4-4e45-ab0d-dd9156d1bde9' AND (SubscriptionType not equals to  2 OR SubscriptionType IS NULL) THEN 'Premier' WHEN SupportAreaNameL1= 'proactive' THEN 'Proactive'  ELSE 'Non-Premier'. END AS ServiceOffering",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,Severity,Direct mapping to Severity column in SupportRequestDetails_NRT intermediate table having integer  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SkillIds,Direct mapping to SkillIds column in SupportRequestDetails_NRT intermediate table having String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SkillType,"Derived by applying decode logic on Skillids column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic: CASE WHEN skillids LIKE '%393216%' THEN hardcoded as 'Premier skill' 
WHEN skillids LIKE '%589824%' THEN hardcoded as 'Premier Escalation skill'
WHEN skillids LIKE '%589825%' THEN hardcoded as  'CritSit skill' ELSE 'Other' END AS SkillType",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SnapshotDate,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SnapShotDateTimeInUTC,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,Source,Direct mapping to Source column in SupportRequestDetails_NRT intermediate table having  String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SRAgeBucket,"Derived by applying decode logic on RequestAge_Days column in SupportRequestDetails_NRT  intermediate table having string values (refer entity desc for SupportRequestDetails_NRT table derivation).
Logic:CASE WHEN RequestAge_Days <= 1 Then hardcoded as '00-01 day'
	WHEN RequestAge_Days > 1 AND RequestAge_Days <= 3 Then hardcoded as '01-03 days'
	WHEN RequestAge_Days > 3 AND RequestAge_Days <= 7 Then hardcoded as '03-07 days'
	WHEN RequestAge_Days > 7 AND RequestAge_Days <= 14 Then hardcoded as '07-14 days'
	WHEN RequestAge_Days > 14 AND RequestAge_Days <= 21 Then hardcoded as '14-21 days'
	WHEN RequestAge_Days > 21 AND RequestAge_Days <= 30 Then hardcoded as '21-30 days'
	WHEN RequestAge_Days > 30 AND RequestAge_Days <= 60 Then hardcoded as '30-60 days'
	WHEN RequestAge_Days > 60 AND RequestAge_Days <= 90 Then hardcoded as '60-90 days'
	WHEN RequestAge_Days > 90 Then hardcoded as '90+ days'
	END AS SRAgeBucket",,Ok,Improve Paraphrasing ,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SRCreatedDateTime,Direct mapping to CreatedDateTime column in SupportRequestDetails_NRT intermediate table having  timestamp(UTC) values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SRLanguage,Direct mapping to TicketLanguage column in SupportRequestDetails_NRT intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SRNumber,Direct mapping to TicketNumber column in SupportRequestDetails_NRT intermediate table having integer values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SRState,Direct mapping to State column in SupportRequestDetails_NRT intermediate table having  String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SubOrg,Direct mapping to SubOrg column in SupportRequestDetails_NRT intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SubscriptionType,Direct mapping to SubscriptionType column in SupportRequestDetails_NRT intermediate table having integer values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SupportArea,Direct mapping to SupportArea column in SupportRequestDetails_NRT intermediate table having  String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,SupportAreaName,Direct mapping to SupportAreaName column in SupportRequestDetails_NRT intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,TenantCountry,This is reference attribute to the DimGeography table to get more details about the CountryName. It is populated by joining TenantCountry column in SupportRequestDetails_NRT intermediate table (refer entity desc for SupportRequestDetails_NRT table derivation)  with ISOCountryShortCode column in DimGeography table coming from Commercial NextDay Datamart within SA&DP,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,TenantId,Direct mapping to TenantId column in SupportRequestDetails_NRT intermediate table having String values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,TenantName,Direct mapping to TenantName column in SupportRequestDetails_NRT intermediate table having string  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,Theme,Direct mapping to Theme column in WorkHistorySupportTickets intermediate table source having String  values (refer entity desc for SupportRequestDetails_NRT table derivation).,,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,WeekEndDate,"Derived attribute of datatype Date based on the Current_Timestamp.
Logic: It calculates the next Sunday (in that week) after subtracting 7 days from the current date.
Example: It we take Current_Timestamp as March 8th, it subtracts 7 days from it which is March 1st and the immediate next Sunday is considered as the WeekEndDate which is March 3rd.",,Ok,,Ram,,
UDPCommercial_NRT,vwfactravesrunassignedsnapshot,WeekStartDate,"Derived attribute of datatype date based on the Current_Timestamp
Logic: It calculates the next Monday (in that week) following the subtraction of 7 days from the current date.
Example: It we take Current_Timestamp as March 8th, it subtracts 7 days from it which is March 1st and the immediate next Monday is considered as the WeekStartDate which is March 4th.",,Ok,,Ram,,
UDPCommercial_NRT,vwfactsrevents,AgentIdentifiedRootCauseId,Direct Mapping to AgentIdentifiedRootCauseId  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,AgentIdLastUpdatedDateTime,Direct mapping to AgentIdLastUpdatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having TimeStamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrevents,AgentLineOfBusiness,Direct Mapping to AgentLineOfBusiness column in Cases table coming from DFM Events data processed by Cornerstone having string values. ,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ARRType,"Derived by applying decode logic on ServiceName_ARRS,ServicePackageSKU_ARRS,ServicePackageName_ARRSP, Severity  columns in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP and CommercialProductLevel3Name column in DimPESProduct table coming from Commercial NextDay Datamart within SA&DP.

Logic: WHEN ServiceName_ARRS AND ServicePackageSKU_ARRS IS NOT NULL AND CommercialProductLevel3Name = 'azure tech' THEN 'ARR_PMC' 
WHEN ServicePackageName_ARRSP = 'arr critical prh' AND Severity IN ( '1' ,'2','a') AND CommercialProductLevel3Name = 'azure tech' THEN 'T100'
WHEN ServicePackageName_ARRSP IS NOT NULL AND CommercialProductLevel3Name = 'azure tech' THEN 'ARR Commercial'
ELSE 'Unknown' END AS ARRType",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,AzureSubscriptionId,Direct Mapping to AzureSubscriptionId column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CallingCountry,Direct Mapping to SupportCountry column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CallingTimeZone,Direct Mapping to SupportTimeZone column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CauseTypeKey,This is reference Key to the DimCauseType table to get more details about CauseTypeKey. This key is populated by joining CauseType column in Cases table coming from DFM Events data processed by Cornerstone with CauseType in the DimCauseType coming from Commercial NextDay Datamart within SA&DP..,"Mention source
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrevents,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrevents,CollaborationTasks,"Derived by applying decode logic on Id and TaskType columns in CollborationTask table coming from DFM Events processed by Cornerstone source.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='CollaborationTask'.
Step2- If TaskCountId from step 1 is NULL, it is replaced with 0 END AS CollaborationTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CreatedTimeKey,"Derived attribute of datatype Int based on CreatedDateTime column coming from DFM Events processed by Cornerstone source.
Logic: Considering only the date part (and excluding the time part) from the DateTime provided in the yyyyMMdd format.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CurrentSupportAreaKey,Direct mapping to CurrentSupportAreaKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having interger values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CustomerGeographyKey,Direct mapping to CustomerGeographyKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having interger values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CustomerProgramPriority,Direct mapping to CustomerProgramPriority column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,CustomerProgramType,Direct mapping to CustomerProgramType  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,DataSourceKey,This is reference key to the DimDataSource table to get more details of DataSourceKey. It is populated by joining ActiveSystem column in Cases table coming from DFM Events data processed by Cornerstone source with DataSourceName column in DimDataSource coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,DaysToClose,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE When State= ""closed"" then we take days difference between StateLastUpdatedDateTime and CreatedDateTime columns ELSE 0 END AS DaysToClose",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,EmailInteractions,"Derived by applying decode logic on Id and TaskType columns in EmailInteraction table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='EmailInteraction'.
Step2- If TaskCountId coming from step 1 is NULL, it replaces it with 0 END AS EmailInteractions",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,EmployeeKey,This is reference key to DimEmployee to get more details of the employee associated with survey response. It is populated by joining the systemuserid column in systemuser table from cornerstone source with NativeAgentId column in the DimEmployeeMapping table in UDP Common Database for dynamics cases.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,EscalationTasks,"Derived by applying decode logic on Id and TaskType columns in EscalationTasks table from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='EscalationTask'.
Step2- If TaskCountId coming from step 1 is NULL, it replaces it with 0 END AS EscalationTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,FCRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fcr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.","Revisit - step 3 paraphrasing not clear
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,FDRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fdr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.","Revisit
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,FirstAssignmentDateTime,"Derived by applying decode logic on EventDateTime, AgentId, AgentIdAssignedCount and UpdatedAttributes columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE WHEN AgentId IS NOT NULL AND AgentIdAssignedCount = 1 AND UpdatedAttributes like '%AgentId%' THEN EventDateTime END AS FirstAssignmentDateTime.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,FollowupTasks,"Derived by applying decode logic based on Id and TaskType columns in FollowUpTasks table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='FollowupTask'.
Step2- If TaskCountId coming from step1 is NULL, it replaces it with 0 END AS FollowupTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,FWRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fwr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,GlobalContractKey,"Indirect mapping to GlobalContractKey in DimGlobalContract table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step1- It is fetched by joining Cases table coming from DFM Events data processed by Cornerstone with DimGlobalContract(DGC) when the below following conditions are met.
When Cases.ContractObjId = DGC.GlobalContractID
AND Cases.ContractScheduleId = DGC.GlobalContractScheduleId
AND Cases.ContractSiteID = DGC.GlobalInstallationSiteID
Step2 - If GlobalContractKey is NULL from step1 then replaces it with -1. ",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ICMSRId,Direct mapping to IncidentId column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IdleDays,"Derived by applying decode logic based on PerformedOn and CreatedDateTime columns in Labor and Cases table respectively coming from DFM Events data processed by Cornerstone.
Logic: Calculates the difference in days between the PerformedON column in Labor table and the CreatedDateTime column in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IdleDaysIdleMinutes,"Derived by applying decode logic on PerformedOn and CreatedDateTime in Labor and Cases table respectively coming from DFM Events data processed by Cornerstone having integer values.
Logic: Calculates the difference in minutes between the current timestamp and the PerformedON column in Labor table or CreatedDateTime column in Cases table based on which ever column is not null.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IdleTimeSpanKey,"Indirect mapping to IdleTimeSpanKey in DimIdleTimeSpan table coming from Commercial NRT Datamart within SA&DP.
Logic: Step-1 : It is fetched by joining IdleTimeSpan column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP with IdleTimeL1 column in DimIdleTimeSpan table.
Step-2 : If IdleTimeSpanKey from step-1 is NULL then it replaced with -1.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,InitialResponseQueueKey,This is reference key to the DimQueue table to get more details about about Queue. This key is populated by joining RoutingContextId column in Cases table coming from DFM Events data processed by Cornerstone source with NativeQueueId column in DimQueue table coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,InScopingtime,"Derived attribute of datatype int based on EventDateTime, StateAnnotation and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: When StateAnnotation = ('identifying the issue','identifying issue','scope') THEN it calculates the difference in minutes between EventDateTime and CreatedDateTime columns.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,InternalTitle,Direct mapping to InternalTitle column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IRStateKey,"This is reference Key to the DimKPIState table to get more details about KPIState corresponding to InitialResponseState.It is populated by joining KPIState column in Cases table with State column in SlaItem table, both the tables coming from DFM Events data processed by Cornerstone source.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IRStatus,"Derived by applying decode logic based on CompletedDateTime, ExpireDateTime, SlaType columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic : Step 1- We consider the max value of CompletedDateTime and ExpireDateTime columns when SlaType = 'initialresponse'
Step 2- If max of CompletedDateTime is greater than ExpireDateTime then hardcoded as 'Missed'
Step 3- If max of CompletedDateTime is less than or equal to ExpireDateTime then hardcoded as 'Met' Else 'Unknown' END AS  IRStatus","Checked the condition 
CASE WHEN SlaType = 'initialresponse' THEN CompletedDateTime END ) is greater than MAX of (CASE WHEN SlaType = 'initialresponse' THEN ExpireDateTime END )
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IRStatusKey,"Indirect mapping to IRStatusKey in DimIRStatus table coming from Commercial NRT Datamart within SA&DP.
Logic: Step1- It is fetched by joining IRStatus column in DimIRStatus table with IRStatus column in SlaItem table coming from DFM Events data processed by Cornerstone.
Step2- If IRStatusKey is NULL from step1 then replaces it with -1. ","Check the line ""IdleTimeSpanKey is NULL from step 1""?
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,Is24X7OptedIn,Direct mapping to Is24X7OptedIn column in Cases table coming  from DFM Events data processed by Cornerstone source  having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsARR,Direct mapping to IsARR column in DimSupportServiceRequest table coming  from Commercial NextDay Datamart within SA&DP source  having boolean values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsAzureACEProgram,"Derived by applying decode logic based on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone.
Logic: CASE When ProgramType = 'Azure ACE' then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsBug,"Dervied by applying decode logic on Causetype column in Cases table coming DFM Events data processed by Cornerstone source having string values.
Logic :CASE When CasueType='Bug' then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsCEnS,"Derived by applying decode logic on ChannelOrgCode,FunctionHierarchyKey,ChannelOrgSummaryName, IsCEnS columns in DimFunctionHierarchy table coming from MDM source. 
Logic:
          If lower(ChannelOrgCode)='b20e' Then true
          If FunctionHierarchyKey=-1 or ChannelOrgSummaryName='Unknown' or FunctionHierarchyKey is Null THEN
              CASE 
              If   MDM.IsCEnS is not null then Cast(MDM.IsCEnS as Boolean)
              Else true
              END
         WHEN lower(ChannelOrgCode)<>'b20e' Then false
          Else true
          END AS IsCEnS ",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsCritsit,Direct mapping to IsCritSit column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsCSSCSDProgram,"Derived by applying decode logic on ProgramType column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic : CASE When ProgramType = %csscsd% then hardcoded as true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsCubeFlag,"Derived by applying decode logic on TenantName column in DimTenant table, DataSourceKey column in DimDataSource table, QueueName column in DimQueue table coming from Commercial NextDay Datamart within SA&DP, EmployeeEmail and CSCompanyAgency columns in DimEmployee table coming from UDP Common Database for dynamics cases, PreviousRoutingQueueName column in SREvents table coming from DFM Events data processed by Cornerstone and SupportAreaName column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP 
Logic:CASE WHEN TenantName LIKE '%contoso%' OR 'mstest_%' OR 'test_test_%' OR 'test' OR 'msft' THEN 0
	            WHEN DataSourceKey = 203 AND EmployeeEmail NOT LIKE '%offagent%'
                                AND CSCompanyAgency NOT IN ('Avande', 'Experis', 'Mural', 'Rhipe', 'Sherweb', 'Subfero Ltd', 'Zones Inc')
				AND WHEN QueueName OR PreviousRoutingQueueName NOT IN ( 'MSaaS Rave Transfers', 'Engineering')
				AND SupportAreaName NOT LIKE '%test%' OR SupportAreaName NOT LIKE '%lab%'
		   THEN 1 ELSE 0 END AS IsCubeFlag","To be checked by dev
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsD365ACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic :  CASE When ProgramType = '%d365%' then hardcoded true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic : CASE When IsEUSchrems = 'eu' Then TRUE Else FALSE END AS IsEUSchrems",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsForceSyncEvent,Direct Mapping to IsForceSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsIdentityACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone having string values.
Logic : CASE When ProgramType ='%identity%'  then true else false",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsM365ACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone having string values.
Logic : CASE When ProgramType = '%m365%'  then true else false",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsM365SR,Direct mapping to IsM365SR column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsPartnerSR,Direct Mapping to IsPartnerServiceRequest column in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsPublicSector,Direct mapping to IsPublicSector column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsPurged,"Derived attribute of datatype boolean in PurgedIncidents table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step1 - We hardcode IsPurged as 1 for the all distinct ServiceRequestNumber coming from PurgedIncidents table.
Step2 - We fetch IsPurged by joining SRNumber column in Cases table coming from DFM Events data processed by Cornerstone and ServiceRequestNumber column in PurgedIncidents table.
Step3 - If the value from step 2 is null then it will assign 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsReopen,"Derived by applying decode logic based on ReopenCount column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:If ReopenCount > 0 then True Else False",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsRepair,"Derived by applying decode logic based on ServiceRequestID column in Cases table coming from DFM Events data processed by Cornerstone and DataSourceKey column in DimDataSource table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step 1- If DatasourceKey=3 it then goes to step 2 else step 3.
Step2- If ServiceRequestID column is not NULL then it's hardcoded as 'Yes' else 'No'. 
Step3- It assigns the value 'Unknown'.","Rewrite the desc, paraphrasing is missing.
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsRestrictedAccess,Direct mapping to IsRA in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsS500Program,Direct Mapping to IsS500Program column in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRInitialResponse30min,"Derived by applying decode logic on CompletedOn and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: Step 1- Calculates time difference in minutes between CompletedOn and CreatedDateTime columns in Cases table. 
Step 2- If the value from step 1 is less than or equal to 30 minutes it's hardcoded as 1 else 0.","paraphrasing is missing, rewrite
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRScoping,"Derived by applying decode logic based on StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE WHEN StateAnnotation  = ('identifying issue' ,'identifying the issue' ,'scope' ,'initial contact pending' ,'resolved' ,'resolved by customer' ,'resolved external' ,'troubleshooting' ,'waiting for confirmation' ,'waiting for information' ) Then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRServiceImpactingEvent,Direct mapping to IsIncidentServiceImpactingEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRSolutionDelivered,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = ('waiting for confirmation' ,'resolved' ,'resolved external' ,'resolved by customer') THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRSolutionDeliveredPendingConfirmation,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = 'waiting for confirmation'  THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRSolutionDeliveredSolutionConfirmed,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = ('resolved','resolved external','resolved by customer') THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSRTroubleShooting,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
 Logic:When StateAnnotation IN ('troubleshooting') then True else Flase.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsStrategicProgram,"Derived by applying decode logic based on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone source.
Logic: If ProgramType contains values like 'S500' then true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsSyncEvent,Direct Mapping to IsSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsTransferred,"Derived by applying decode logic based on AgentId column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : WHEN AgentId IS NULL THEN hardcoded as 0 else 1",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsWaitingforScope,"Derived by applying decode logic based on StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE WHEN StateAnnotation NOT IN ('identifying the issue','identifying issue','scope')  THEN 1 ELSE 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,IsWaitingOnScopingOver24,"Derived by applying decode logic based on StateAnnotation, CreatedDateTime  columns in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE 
STEP 1: WHEN StateAnnotation NOT IN ('identifying the issue','identifying issue','scope')  THEN we take difference in hours between Current Timestamp and CreatedDateTime 
STEP 2 : if the difference from Step1 is greater than 24 then it assign 1 else 0. 
",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,LaborLastPerformedDateTime,Direct Mapping to CreatedDateTime column  in Labor Table coming from DFM Events data processed by Cornerstone source having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,LaborSpanKey,This is reference key to the DimIdleTimeSpan to get more details about IdleTimeSpan .It is populated by joining LaborSpan column in DimLaborTimeSpan table coming from Commercial NextDay Datamart within SA&DP with LaborSpanL1 column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,Link,Direct mapping to EntityURI column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,PartnerTenantId,"Derived by applying decode logic on CustomerType, CustomerType2, CustomerType3, CustomerIdSource, CustomerIdSource2, CustomerIdSource3 columns in Cases table loaded from DFM Events data processed by Cornerstone source.
Logic: CASE   WHEN CustomerType ='supportpartner' and CustomerIdSource is not equal to 'unknown' and CustomerIdSource is NOT NULL THEN CustomerId1
	             WHEN CustomerType2 ='supportpartner' and CustomerIdSource2 is not equal to 'unknown' and CustomerIdSource2 is NOT NULL THEN CustomerId2
                             WHEN CustomerType3 ='supportpartner' and CustomerIdSource3 is not equal to 'unknown' and CustomerIdSource3 is NOT NULL THEN CustomerId3
            END AS PartnerTenantId",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,PESProductKey,"This is reference key to the DimPESProduct to get more details of PESProduct. This key is populated by joining PesproductId column in DimPESProduct table with PesproductId column in DimSupportAreaPath, both the tables coming from Commercial NextDay Datamart within SA&DP",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,PhaseKey,"This is reference key to the DimPhase table to get more details abour Phase. This key is populated by joining Phase column in FactSRSupportData table with Phase column in Cases table, both the tables comng from Commercial NRT Datamart within SA&DP.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,PhoneInteractions,"Derived by applying decode logic on Id and TaskType columns in PhoneInteraction table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='PhoneInteraction'.
Step2- If TaskIdCount coming from step 1 is NULL, it replaces it with 0 END AS PhoneInteractions.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,PlanningCategoryKey,Direct mapping to PlanningCategoryKey column in FactSupportServiceRequest table comng from Commercial NextDay Datamart within SA&DP source having integer values.,ok,Provide the logic for surrogate key generation like which columns ?,,Ram,,Updated
UDPCommercial_NRT,vwfactsrevents,PreviousAssignedQueueKey,"Derived by applying decode logic based on Row_InitialPreviousRoutingContext ,EventDateTime columns in SREvents table coming from DFM Events data processed by Cornerstone .
Logic: - Step1- WHEN Row_InitialPreviousRoutingContext = 1 from SREvents table then we consider QueueKey from DimQueue table coming from Commercial NextDay Datamart within SA&DP by joining PreviousRoutingContextId in SREvents table with NativeQueueID in DimQueue table.
Step2- The QueueKey fetched from step1 is aliased as PreviousAssignedQueueKey.","Rewritethe description for significance of queuekey
Can you confirm if is it reference key (queueKey) ? If yes, this need to updated as reference key in desc.
[Eshwar] This is not reference key.
Ok.",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,QueueKey,This is reference key to the DimQueue to get more details of Queue.This key is populated by joining RoutingContextId column in Cases table coming from DFM Events data processed by Cornerstone with NativeQueueId column in DimQueue table coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ReopenCount,"Derived attribute of datatype smallint based on CaseReopenRowID and EntityAction columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: WHEN  CaseReopenRowID = 1 THEN 1 ELSE 0 AS ReopenCount where EntityAction = 'CaseReopened'",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,RestrictedAccessProgramName,Direct mapping to RestrictedAccessProgramName column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,RootCause,Direct Mapping to RootCause column coming inCases Table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SAPIssueId,Direct mapping to SupportAreaPathIssue  column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SAPKey,This is a reference key to the DimSupportAreaPath table to get more details about Support area path. This key is populated by joining SupportAreaPathID column in DimSupportAreaPath table coming from Commercial NextDay Datamart within SA&DP with SAPID column in Cases table coming from  DFM Events data processed by Cornerstone.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ScopeAgeSpanKey,This is reference key to the DimScopeAgeSpan to get more details about ScopeAgeSpan.This key is populated by joining ScopeAgeSpan column in Factsupportdata coming from Commercial NRT Datamart within SA&DP with ScopeAgeSpan column in DimScopeAgeSpan coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ServiceOfferingMasterKey,"This is reference key to ServiceOfferingMasterKey table to get more details about ServiceOfferingMaster.This key is populated by joining SRNumber column in FactSRSupportData table with SRNumber column in Cases table, both the tables coming from Commercial NRT Datamart within SA&DP.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,ServiceRequestStatus,"Derived by applying decode logic on StateAnnotation, DynamicsStatus, EventDateTime and ActiveSystem columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE WHEN ActiveSystem = 'dynamics' AND EventDateTime greater than or equal to  '2022-02-21' THEN DynamicsStatus ELSE StateAnnotation END AS ServiceRequestStatus",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SLACompletedDateTime,Direct mapping to CompletedDateTime column in Cases table coming from DFM Events data processed by Cornerstone source having timestamp(UTC) values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SLAExpiresDateTime,Direct Mapping to StartDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SLAStartDateTime,Direct Mapping to SLAStartDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRAgeDays,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in days between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in days between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
               If the result when either of the above conditions met SRAgeDays assigned to 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRAgeHrs,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in hours between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in hours between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
                If the result when either of the above conditions met it assign 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRAgeMin,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in minutes between Current Timestamp and CreatedDateTime column in Cases table.
              When State ='Closed' it calculates the difference in minutes between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
               If the result when either of the above conditions met it assign 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRAgeTimeSpanKey,This is reference key to the DimAgeTimeSpan table to get more details about AgeTimeSpan. This key is populated by joining TimeSpan column in DimTimeSpan table coming from Commercial NextDay Datamart within SA&DP with CaseAgeTimeSpan column in FactSRSupportData coming from Commercial NRT Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRClosedDateTime,Direct mapping to StateLastUpdatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRCreatedDateTimeId,"Derived attribute of datatype int based on CreatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:Step1-  It fetches the date portion from CreatedDateTime and removes hyphens from it.
Step2-If SRCreatedDateTimeId from step1 has null values then it replaces it with -1.","Rewrite the logic in desc, by mentioning like below:
It extracts the date from CreateDateTime by removing the Hyphen.
Ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRCreatedDateTimeSeconds,"Derived attribute of datatype int based on CreatedDateTime  column in Cases table from DFM data processed by Cornerstone.It is joined using SRNumber from both FactSupportData and Cases table.
Logic:Step1- It calculates the number of seconds passed since the start of the day (midnight) for a given CreatedDateTime. 
           Step2- It then rounds the value fetched from step1 up to the nearest 30-minute interval and subtracts 1 second and aliased as SRCreatedDateTimeSeconds.

Example: The CreatedDateTime is 2024-03-07 15:25:30,
                Step1 : Calculate Seconds from 12 am and the time difference is 15 h 25 min 30 sec, which equals to 55,530 seconds.
                Step 2: Divide 55,530 sec by 1800 (seconds in 30 minutes), resulting in 30.85 and round off which would be 31 mins.
                Step 3: Multiply 31 min (from step 2) by 1800 to get Seconds in 30-minute Increments that is 55,800 seconds.
                 Step 4: Subtract 1 second from 55,800 seconds, resulting in 55,799 seconds end as SRCreatedDateTimeSeconds.
","Logic is not clear, check
updated
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRCreatedTimeOfDayId,Direct mapping to TimeOfDayID column in DimTImeOfDay table coming from Commercial NRT Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRCreationChannel,Direct mapping to CreationChannel  column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRCreationDateTime,Direct mapping to CreatedDateTime  column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRDeliveryLanguage,Direct mapping to SupportLanguage  column in Cases table coming from DFM Events data processed by Cornerstone having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRKey,Surrogate key generated within UDP NRT to identify unique records of FactSREvents table.It is generated using SRNumber.,ok,Provide the logic for surrogate key generation like which columns ?,,Ram,,Updated
UDPCommercial_NRT,vwfactsrevents,SRLastModifiedDateTime,Direct mapping to LastModifiedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRMaxSeverity,"Derived by applying decode logic based on Severity column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic :  If the severity from cases table is unknown (either explicitly set to -1 or null), it is labeled as 'Unknown'. 
                 If the severity is '2', it is labeled as 'A'. If it's '3', it's labeled as  'B', and if it's '4', it's labeled as 'C'.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRModality,Direct mapping to SupportChannel column in Cases table coming from DFM Events data processed by Cornerstone having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRModifiedTimeId,"Derived by applying decode logic on EventDateTime column in DFM Events data processed by Cornerstone.
Logic: Step1- It extracts the date portion of EventDateTime.
Step2- If SRModifiedTimeId from step1 has null values then it's replaced with -1.","Logic update by referring to SRCreatedDateTimeId column
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRModifiedTimeOfDayId,Direct mapping to TimeOfDayID column in DimTImeOfDay table coming from Commercial NRT Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRNumber,Direct mapping to CaseNumber  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SROriginatingDataSource,Direct mapping to OriginatingSystem  column in Cases table coming from DFM Events data processed by Cornerstone having Integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SROwner,Direct mapping to AgentId column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SROwnerCount,Direct mapping to AgentIdAssignedCount  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SROwnerManager,Direct mapping to CurrentManagerEmail column in DimEmployee Table coming from Commercial NextDay Datamart within SA&DP source.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SROwnerTimezone,Direct mapping to SupportTimeZone column in Cases table coming from DFM Events data processed by Cornerstone having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRQueueFullName,"Derived by applying decode logic on QueueName and PreviousRoutingQueueName columns in DimQueue coming from Commercial NextDay Datamart within SA&DP and SREvents table coming from Commercial NRT Datamart within SA&DP.
Logic: It converts either ""QueueName"" or ""PreviousRoutingQueueName"" to a string, if both are null it assign 'Unknown'.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRScopeTimeDateTimeId,"Derived by applying decode logic on StateAnnotation and EventDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:Step1 - It extracts the date portion of ""EventDateTime"" WHEN ""StateAnnotation""= ('identifying the issue', 'identifying issue', 'scope').
Step2 - If step 1 fetches null values then ut replaced with -1","Logic update by referring to SRCreatedDateTimeId column
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRScopingDateTime,"Derived by applying decode logic on StateAnnotation and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: If  StateAnnotation contains any one of the specified values in ('identifying the issue', 'identifying issue', 'scope') then it returns the EventDateTime from Cases table otherwise, it returns NULL.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRServiceOffering,This is reference attribute to the DimServiceOffering table to get more details about the SRServiceOffering. It is populated by joining ServiceName column in DimServiceOffering coming from Commercial NextDay Datamart within SA&DP with SKU column in IncidentRedemption table coming from DFM Events data processed by Cornerstone.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRSeverity,Direct mapping to Severity  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRSkillIdList,Direct Mapping to ServiceRequestSkillIdList column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRStatus,Direct mapping to State  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRSubType,Direct mapping to CaseType column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoAssignment,"Derived by applying decode logic on EventDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic:  It calculates minute difference between EventDateTime and CreatedDateTime column when EntityAction= 'AgentAssigned' in cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoInitialResponse,"Derived by applying decode logic CompletedDateTime,Type and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It calculates  minute difference between CompletedDateTime and CreatedDateTime columns When Type = 'InitialResponse' in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoScoping,"Derived by applying decode logic on StateAnnotation, EventDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: IF StateAnnotation is in any of the specified values ('identifying the issue', 'identifying issue', 'scope'), it returns the EventDateTime from cases table otherwise, it returns NULL.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoSolutionConfirmed,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic:  It takes minute difference between EventDateTime and CreatedDateTime columns when StateAnnotation in ('waiting for confirmation').",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoSolutionoffered,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It takes minute difference of EventDateTime and CreatedDateTime columns when StateAnnotation IN ( 'resolved','resolved external','resolved by customer').",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTimetoTroubleShooting,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It takes  minute difference between EventDateTime and CreatedDateTime when StateAnnotation IN ('troubleshooting') in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRTotalLaborMinutes,"Derived by applying decode logic based on LaborMinutes column in Cases table coming from DFM Events processed by Cornerstone having integer values.
Logic:  Step1- If the LaborMinutes value from Cases table is not null then we will take CurrentTimestamp, 
Step2- If step1 fetches null value then it's replaced with 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRType,"Derived  by applying decode logic on IncidentType and CaseType columns in Cases table coming from DFM Events data processed by Cornerstone having string values.
Logic :
Step 1 : It checks if a certain condition involving IncidentType column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP is true. 
Step 2: If Step 1 is true, then it checks the value of SRType  column in Cases table coming from DFM Events data processed by Cornerstone and assigns specific values based on different scenarios. 
Step 3: If the initial condition from Step 1 is false, it returns the result as 'Unknown'.","Write the logic in steps
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SRUri,Direct mapping to CaseUri column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SupportLanguageKey,Direct Mapping to SupportLanguageKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SupportTier,Direct mapping to SupportTier  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,SymptomSupportTopicKey,Direct mapping to SupportTopicKey column in DimSupportTopic Table coming from Commercial NextDay Datamart within SA&DP source having interger values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TeamId,Direct mapping to TeamId  column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TenantId,"Derived by applying case logic on CustomerType1, CustomerType2, CustomerType3, CustomerIdSource1, CustomerIdSource2, CustomerIdSource3 columns in Cases table coming from DFM Events data processed by Cornerstone source.
logic:If CustomerType1='enterprise' and CustomerIdSource1 not equal to 'unknown' and CustomerIdSource1 is NOT NULL THEN CustomerId1,
           WHEN CustomerType2='enterprise' and CustomerIdSource2 not equal to 'unknown' and CustomerIdSource2 is NOT NULL THEN CustomerId2,
           WHEN CustomerType3='enterprise' and CustomerIdSource3 not equal to 'unknown' and CustomerIdSource3 is NOT NULL THEN CustomerId3,
           END AS TenantId",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TranferredTo,Direct mapping to TranferredTo  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TransferReason,Direct mapping to TransferReason column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TransferredBy,Direct mapping to UpdatedBy  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TransferredDateTime,Direct mapping to EventDateTime column in Cases table coming from DFM Events data processed by Cornerstone source having timestamp(UTC) values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,TransferredFrom,Direct mapping to TransferredFrom column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrevents,UpdatedByAgent,Direct mapping to UpdatedBy column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwrptcollaborationtaskevents,AgentIdUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,AssignmentPending,Direct Mapping to AssignmentPending column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,CreatedBy,Direct Mapping to CreatedBy column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,CreatedDateTime,Direct Mapping to CreatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,CurrentEmployee,Direct Mapping to AssignedTo column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EntityAction,Direct Mapping to EntityAction  column in CollaborationTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EntityType,Direct Mapping to EntityType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EventDateTime,Direct Mapping to EventDateTime column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,EventType,Direct Mapping to EventType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,Id,Direct Mapping to id column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,IsEUSchrems,Derived by applying decode logic on IsEUSchrems column in Collaboration table loaded from DFM Events data processed by Cornerstone. Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,IsM365SR,Direct Mapping to IsM365 column in CollaborationTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in CollaborationTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the CollaborationTask Event table where the routing is done
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwrptcollaborationtaskevents,RoutingContextId,Direct Mapping to RoutingContextId  column in CollaborationTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,SRCurrentSeverity,Direct Mapping to column Severity in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,SREventSeverity,Direct Mapping to Severity column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,SRInitialSeverity,Dervied by applying decode logic on column Severity loaded from Cases table from DFM Events data processed by Cornerstone. Logic: Taking the first value of Severity column from Cases entity by grouping on SR Number and order by based on Eventdatetime.,Ok,"What is significanc of A, please define.
Check the logic part,  where it can be updated like below
example : Taking the first value of severity column from entity X by grouping on SR number…........",,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,SRNumber,Direct Mapping to CaseNumber column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,State,Direct Mapping to State column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,StateAnnotation,Direct Mapping to StateAnnotation column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,SupportAreaPathId,Direct mapping from SAPId (Support Area Path Id)  in CollaborationTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in CollaborationTask table coming from DFM Events data processed by Cornerstone from string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,UpdatedBy,Direct Mapping to UpdatedBy column in CollaborationTask table coming from DFM Events data processed by Cornerstone timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtaskevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,AgentIdUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,AssignmentPending,Direct Mapping to AssignmentPending column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,CreatedBy,Direct Mapping to CreatedBy column in CollaborationTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,CreatedDateTime,Direct Mapping to CreatedOn column in CollaborationTask table coming  from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,CurrentEmployee,Direct Mapping to AssignedTo of column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,Description,Direct Mapping to Description column in CollaborationTask Table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EntityAction,Direct Mapping to EntityAction column in CollaborationTask Table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EntityType,Direct Mapping to EntityType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EntityURI,Direct Mapping to EntityURI column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EventDateTime,Direct Mapping to EventDateTime column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,EventType,Direct Mapping to EventType column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,Id,Direct Mapping to id column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,IsEUSchrems,Derived by applying decode logic on IsEUSchrems column in Collaboration table loaded from DFM Events data processed by Cornerstone . Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,IsM365SR,Direct Mapping to IsM365 column in CollaborationTask table from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in CollaborationTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the CollaborationTask Event table where the routing is done
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwrptcollaborationtasks,RoutingContextId,Direct Mapping to RoutingContextId column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,SRCurrentSeverity,Direct Mapping to column Severity  in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,SRNumber,Direct Mapping to CaseNumber column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,State,Direct Mapping to State column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,StateAnnotation,Direct Mapping to StateAnnotation column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,SupportAreaPathId,Direct Mapping to SAPId (Support Area Path Id) column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,UpdatedBy,Direct Mapping to UpdatedBy column in CollaborationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptcollaborationtasks,UpdatedDateTime,Direct Mapping to UpdatedOn column in CollaborationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EmailDirection,Direct Mapping to Direction column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EntityAction,Direct Mapping to EntityAction column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EntityType,Direct Mapping to EntityType column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier)column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EventDateTime,Direct Mapping to EventDateTime column in EmailInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc  column in EmailInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,EventType,Direct Mapping to EventType  column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,Id,Direct Mapping to id  column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,IsAutomatedEmail,Direct Mapping to IsAutomated  column in EmailInteraction table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in EmailInteraction table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,IsM365SR,Direct Mapping to IsM365 column in EmailInteraction table from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,SRNumber,Direct Mapping to CaseNumber column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in EmailInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptemailinteractionevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in EmailInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,AgentIdLastUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,AssignmentPending,Direct Mapping to AssignmentPending column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,CreatedBy,Direct Mapping to CreatedBy column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,CreatedDateTime,Direct Mapping to CreatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,CurrentEmployee,Direct Mapping to AssignedTo column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EntityAction,Direct Mapping to EntityAction column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EntityType,Direct Mapping to EntityType column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EventDateTime,Direct Mapping to EventDateTime column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,EventType,Direct Mapping to EventType column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,Id,Direct Mapping to id column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in EscalationTask table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,IsM365SR,Direct Mapping to IsM365 column in EscalationTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in EscalationTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the EscalationTask Event table where the routing is done.
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,RoutingContextId,Direct Mapping to RoutingContextId column in EscalationTask table coming from DFM Events data processed by Cornerstone having alphanumeric values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,SRNumber,Direct Mapping to CaseNumber column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,State,Direct Mapping to State column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,StateAnnotation,Direct Mapping to StateAnnotation column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,SupportAreaPathId,Direct mapping to SAPId (Support Area Path Id) column in EscalationTask table coming from DFM Events data processed by Cornerstone having alphanumeric values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,UpdatedBy,Direct Mapping to UpdatedBy column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtaskevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,AgentIdLastUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,AssignmentPending,Direct Mapping to AssignmentPending column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,CreatedBy,Direct Mapping to CreatedBy column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,CreatedDateTime,Direct Mapping to CreatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,CurrentEmployee,Direct Mapping to AssignedTo column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EntityAction,Direct Mapping to EntityAction column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EntityType,Direct Mapping to EntityType column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EventDateTime,Direct Mapping to EventDateTime column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,EventType,Direct Mapping to EventType column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,Id,Direct Mapping to id column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in EscalationTask table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,IsM365SR,Direct Mapping to IsM365 column in EscalationTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in EscalationTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the EscalationTask Event table where the routing is done.
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,RoutingContextId,Direct Mapping to RoutingContextId column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,SRNumber,Direct Mapping to CaseNumber column in EscalationTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,State,Direct Mapping to State column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,StateAnnotation,Direct Mapping to StateAnnotation column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,SupportAreaPathId,Direct mapping from SAPId (Support Area Path Id) column in EscalationTask table coming from DFM Events data processed by Cornerstone having alphanumeric values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,UpdatedBy,Direct Mapping to UpdatedBy column in EscalationTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptescalationtasks,UpdatedDateTime,Direct Mapping to UpdatedOn column in EscalationTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ARRType,Direct Mapping to ARRType column in FactSREvents table coming from Commercial NRT Datamart within SA&DP having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ARRTypeDerived,Direct Mapping to ARRTypeDerived column in FactSREvents table coming from Commercial NRT Datamart within SA&DP having string values.,,"What is significanc of FI, please define.
Break down into IF Else statements.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,DataSourceKey,This is reference key to the DimDataSource table to get more details of DataSourceKey. It is populated by joining ActiveSystem column in Cases table coming from DFM Events data processed by Cornerstone source with DataSourceName column in DimDataSource coming from Commercial NextDay Datamart within SA&DP.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,DataSourceName,Direct Mapping to DataSourceName column in DimDataSource table coming from Commercial NextDay Datamart within SA&DP having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,EmployeeKey,This is reference key to DimEmployee to get more details of the employee associated with survey response. It is populated by joining the systemuserid column in systemuser table from cornerstone source with NativeAgentId column in the DimEmployeeMapping table in UDP Common Database for dynamics cases.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,GeographyLevel2Derived,Direct Mapping to GeographyLevel2Name column in DimGeography table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,GeographyLevel3Derived,Direct Mapping to GeographyLevel3Name column in DimGeography table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IRStatus,"This attribute has static values of (Unknown,Critical) provided by Commercial Business and uploaded through flat file.",,"Phrase the description properly for red highlighted.
Mention entity for ExpiresDateTime",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,Is24x7OptedIn,Direct Mapping to Is24X7OptedIn column in FactSREvents table coming from Commercial NRT Datamart within SA&DP source having boolean values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsARR,Direct mapping to IsARR column in DimSupportServiceRequest table coming  from Commercial NextDay Datamart within SA&DP source  having boolean values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsCritSit,Direct Mapping to IsCritSit  column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsICMSR,Direct Mapping to ICM_IncidentId column in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having Integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsSLAMet,Derived attribute of datatype boolean on basis of KPIState='Complete' coming from DimKPIState table coming from UDPCommercial_NRT.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsSRPurged,"Derived attribute of datatype boolean in PurgedIncidents table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step1 - We hardcode IsPurged as 1 for the all distinct ServiceRequestNumber coming from PurgedIncidents table.
Step2 - We fetch IsPurged by joining SRNumber column in Cases table coming from DFM Events data processed by Cornerstone and ServiceRequestNumber column in PurgedIncidents table.
Step3 - If the value from step 2 is null then it will assign 0.",,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,IsSRServiceImpactingEvent,Direct Mapping to IsSRServiceImpactingEvent column in FactSREvents table coming from Commercial NRT Datamart within SA&DP having boolean values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,KPIState,Direct Mapping to KPIState column in DimKPIState table coming from Commercial NRT Datamart within SA&DP having boolean values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ManagementAccountableForSR,"Derived by applying decode logic on column SRCreationDateTime in FactSREvents from Commercial NRT Datamart within SA&DP source.
Logic:
WHEN (SRCreationDateTime) BETWEEN 1 AND 8 THEN 'Asia'
WHEN (SRCreationDateTime) BETWEEN 9 AND 16 THEN 'EMEA'
WHEN (SRCreationDateTime) BETWEEN 17 AND 24 OR HOUR(SRCreationDateTime)=0 THEN 'Americas' END AS ManagementAccountableForSR",,"What is significanc of FI, please define.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,MinutesPastSLA,"Derived by applying decode logic on column SLAExpiresTime, SLACompletedTime  from SLAEvents from Commercial NRT Datamart within SA&DP source.
Logic: Calculates the time difference in minutes between SLAExpiresTime and either the Current Timestamp or SLACompletedTime, if SLACompletedTime is null. If the conditions are not met, it returns 0; otherwise 1.",,"What is significanc of SLA, please define.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,MinutesPastSLARange,"Derived by applying decode logic on column MinutesPastSLA from FactSREvents from Commercial NRT Datamart within SA&DP source.
Logic: It calculates the MinutesPastSLA into different time ranges and providing corresponding labels.
1)WHEN MinutesPastSLA > 7200 THEN '>5 Days'
2)WHEN MinutesPastSLA > 4320 THEN '>3 Days'
3)WHEN MinutesPastSLA > 1440 THEN '>1 Day'
4)WHEN MinutesPastSLA > 480 THEN '>8 Hours'
5)ELSE '< 8 Hours'.",,"What is significanc of FI, please define.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,MinutesPastSLARangeInDays,"Derived by applying decode logic on column MinutesPastSLA from FactSREvents from Commercial NRT Datamart within SA&DP source.
Logic: It takes the MinutesPastSLA duration and formats it into a string representation of days and hours (e.g., ""2 D | 4 H""). If MinutesPastSLA is null, the result is also null.",,"What is significanc of FI, please define.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,MinutesPastSLARangeSorter,"Derived by applying decode logic on column MinutesPastSLA from FactSREvents from Commercial NRT Datamart within SA&DP source.
Logic: It evaluates the value of MinutesPastSLA and assigns a priority level based on different conditions.
1)WHEN MinutesPastSLA > 7200 THEN 1: If MinutesPastSLA is greater than 7200 (which corresponds to 5 days), it assigns a priority level of 1.
2)WHEN MinutesPastSLA > 4320 THEN 2: If MinutesPastSLA is between 4320 (3 days) and 7200 (5 days), it assigns a priority level of 2.
3)WHEN MinutesPastSLA > 1440 THEN 3: If MinutesPastSLA is between 1440 (1 day) and 4320 (3 days), it assigns a priority level of 3.
4)WHEN MinutesPastSLA > 480 THEN 4: If MinutesPastSLA is between 480 minutes (8 hours) and 1440 (1 day), it assigns a priority level of 4.
ELSE 5) If none of the above conditions are met, it assigns a priority level of 5.",,"What is significanc of FI, please define.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PESProductKey,"This is reference key to the DimPESProduct to get more details of PESProduct. This key is populated by joining PesproductId column in DimPESProduct table with PesproductId column in DimSupportAreaPath, both the tables coming from Commercial NextDay Datamart within SA&DP",,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PlanningCategory,Direct mapping to PlanningCategory column in FactSupportServiceRequest table comng from Commercial NextDay Datamart within SA&DP source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PlanningCategoryBusiness,Direct Mapping to PlanningCategoryBusiness column in DimPlanningCategory table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PlanningCategoryGroup,Direct Mapping to PlanningCategoryGroup column in DimPlanningCategory table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PlanningCategoryGroupModified,"Derived by applying decode logic based on PlanningCategory and PlanningCategoryGroup in DimPlanningCategory table coming from Commercial NextDay Datamart within SA&DP having Integer values.
Logic : If PlanningCategoryGroup = 'dnai' then PlanningCategory else PlanningCategoryGroup.",,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,PlanningCategoryKey,Direct mapping to PlanningCategoryKey column in FactSupportServiceRequest table comng from Commercial NextDay Datamart within SA&DP source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SAPKey,This is a reference key to the DimSupportAreaPath table to get more details about Support area path. This key is populated by joining SupportAreaPathID column in DimSupportAreaPath table coming from Commercial NextDay Datamart within SA&DP with SAPID column in Cases table coming from  DFM Events data processed by Cornerstone.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SAPPath,Direct Mapping to SAPPath column in DimSupportAreaPath table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceName,Direct Mapping to ServiceName column in DimServiceOfferingMaster table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceOfferingLevel1,Direct Mapping to ServiceOfferingLevel1 column in DimServiceOfferingMaster table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceOfferingLevel2,Direct Mapping to ServiceOfferingLevel2 column in DimServiceOfferingMaster table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceOfferingLevel3,Direct Mapping to ServiceOfferingLevel3 column in DimServiceOfferingMaster table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceOfferingLevel4,Direct Mapping to ServiceOfferingLevel4 column in DimServiceOfferingMaster table coming from Commercial NextDay Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,ServiceOfferingMasterKey,This is a reference key to ServiceOfferingMasterKey table to get more details about ServiceOffering.It Is populted by joining SRNumber in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP with SRNumber in Cases table coming from DFM Events data processed by Cornerstone.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SLACompletedTime,Direct Mapping to CompletedDateTime  column in SLAEvents table coming from DFM Events data processed by Cornerstone source having Timestamp(UTC)values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SLAExpiresTime,Direct Mapping to StartDateTime column in SLAEvents table coming from DFM Events data processed by Cornerstone source having Timestamp(UTC)values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SLAStartTime,Direct Mapping to SLAStartDateTime column in SLAEvents table coming from DFM Events data processed by Cornerstone source having Timestamp(UTC)values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRAgeInDays,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in days between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in days between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
               If the result when either of the above conditions met SRAgeDays assigned to 1 else it assign 0 when any of the DateTime column is null.",,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRAgeInDaysAndHours,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in hours between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in hours between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
                If the result when either of the above conditions met it assign 1 else it assign 0 when any of the DateTime column is null.",,"What is significanc of FI, please define.
Put Logic in paraphrasing like (case when / if else/…)",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRCreationChannel,Direct Mapping to SRCreationChannel column in FactSREvents table coming from Commercial NRT Datamart within SA&DP source having  String values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRCreationDateTime,Direct Mapping to SRCreatedDateTime  column  from FactSREvents table coming from Commercial NRT Datamart within SA&DP source having Timestamp(UTC)values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRCreationMinutes,"Derived by applying decode logic on column SRCreationDateTime in FactSREvents table coming from Commercial NRT Datamart within SA&DP source having integer values.
Logic:  It calculates the number of minutes that have passed between the current time and the SRCreationDateTime from FactSREvents table and labels this duration as ""SRCreationMinutes.""",,"What is significanc of FI, please define.
Mention current timestamp instead of unix timestamp in the logic.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRInternalTitle,Direct Mapping to InternalTitle column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having String values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRNumber,Direct Mapping to CaseNumber x from FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SROriginatingDataSource,Direct Mapping to OriginatingSystem column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP sourcehaving String values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SROwner,Direct Mapping to SROwner  column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having String values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SROwnershipCount,Direct Mapping to SROwnerCount  column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP  source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRQueueFullName,"Derived by applying decode logic on QueueName and PreviousRoutingQueueName columns in DimQueue coming from Commercial NextDay Datamart within SA&DP and SREvents table coming from Commercial NRT Datamart within SA&DP.
Logic: It converts either ""QueueName"" or ""PreviousRoutingQueueName"" to a string, if both are null it assign 'Unknown'.",,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRQueueKey,Direct Mapping to QueueKey column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRSeverity,Direct Mapping to Severity column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having integer values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRStatus,Direct Mapping to State column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRStatusWaitstate,Direct Mapping to Phase column  coming from DimPhase table from Commercial NRT Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRSubType,Direct Mapping to CaseType column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRTimetoInitialResponse,"Derived by applying decode logic CompletedDateTime,Type and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It calculates  minute difference between CompletedDateTime and CreatedDateTime columns When Type = 'InitialResponse' in Cases table.",,"Mention word ""column"" for ""type"".
Phrase the sentence properly for red highlighted.",,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRTransferReason,Direct Mapping to TransferReason column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SRType,Direct Mapping to SRType column in FactSREvents Table coming from Commercial NRT Datamart within SA&DP source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfactsrnrt,SubPlanningCategoryName,Direct Mapping to SubPlanningCategory column  from DimPlanningCategory table coming from Commercial NextDay Datamart within SA&DP  source having string values.,,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,AgentIdLastUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,AssignmentPending,Direct Mapping to AssignmentPending column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,BlockedBy,Direct Mapping to BlockedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,CreatedBy,Direct Mapping to CreatedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,CreatedDateTime,Direct Mapping to CreatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,CurrentEmployee,Direct Mapping to AssignedTo column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EndDateTime,Direct Mapping to EndsOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EntityAction,Direct Mapping to EntityAction column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EntityType,Direct Mapping to EntityType  column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier)  coming from FollowUpTask table coming from DFM Events data processed by Cornerstone gaving string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EventDateTime,Direct Mapping to EventDateTime column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,EventType,Direct Mapping to EventType column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,Id,Direct Mapping to id column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,IsBlocking,Direct Mapping to IsBlocking column in FollowUpTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in FollowUpTask table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,IsM365SR,Direct Mapping to IsM365 column in FollowUpTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in FollowUpTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the FollowUpTask Event table where the routing is done.
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,RescheduleCount,Direct Mapping to RescheduleCount column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,RoutingContextId,Direct Mapping to RoutingContextId column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,SRNumber,Direct Mapping to CaseNumber column in DFM Events data having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,StartDateTime,Direct Mapping to StartsOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,State,Direct Mapping to State column  from FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,StateAnnotation,Direct Mapping to StateAnnotation column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,SupportAreaPathId,Direct Mapping to SAPId (Support Area Path Id) column in FollowUpTask table coming from DFM Events data processed by Cornerstone.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,UpdatedBy,Direct Mapping to UpdatedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptaskevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,AgentIdLastUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,AssignedToAssignedCount,Direct Mapping to AssignedToAssignedCount column in FollowUpTask table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,AssignmentPending,Direct Mapping to AssignmentPending column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,BlockedBy,Direct Mapping to BlockedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,CreatedBy,Direct Mapping to CreatedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,CreatedDateTime,Direct Mapping to CreatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,CurrentEmployee,Direct Mapping to AssignedTo column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EndDateTime,Direct Mapping to EndsOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EntityAction,Direct Mapping to EntityAction column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EntityType,Direct Mapping to EntityType column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EventDateTime,Direct Mapping to EventDateTime column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,EventType,Direct Mapping to EventType column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,Id,Direct Mapping to id column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,IsBlocking,Direct Mapping to IsBlocking column in FollowUpTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in FollowUpTask table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,IsM365SR,Direct Mapping to IsM365 column in FollowUpTask table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,PreviousRoutingContextId,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in FollowUpTask table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the FollowUpTask Event table where the routing is done.
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,RescheduleCount,Direct Mapping to RescheduleCount column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,RoutingContextId,Direct Mapping to RoutingContextId column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,SRNumber,Direct Mapping to CaseNumber column in Events table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,StartDateTime,Direct Mapping to StartsOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,State,Direct Mapping to State column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,StateAnnotation,Direct Mapping to StateAnnotation column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,SupportAreaPathId,Direct Mapping to SAPId (Support Area Path Id) column in FollowUpTask table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,UpdatedBy,Direct Mapping to UpdatedBy column in FollowUpTask table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptfollowuptasks,UpdatedDateTime,Direct Mapping to UpdatedOn column in FollowUpTask table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,CreatedDateTime,Direct Mapping to CreatedOn column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EntityAction,Direct Mapping to EntityAction column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EntityType,Direct Mapping to EntityType (KPI) column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EventDateTime,Direct Mapping to EventDateTime column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,EventType,Direct Mapping to EventType column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,Id,Direct Mapping to id  column in KPI table coming from DFM Events data processed by Cornerstone having string values..,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in KPI table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,IsM365SR,Direct Mapping to IsM365 column in SlaItem table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,KpiType,Direct Mapping to KpiType column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,Name,Direct Mapping to Name column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,SRNumber,Direct Mapping to CaseNumber column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,StartDateTime,Direct Mapping to StartsOn column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,State,Direct Mapping to State column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,StateChangedDateTime,Direct Mapping to StateChangedOn column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC. The last time state of the incident changed.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,TargetDateTime,Direct Mapping to Target column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,UpdatedBy,Direct Mapping to UpdatedBy column in KPI table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptkpievents,UpdatedDateTime,Direct Mapping to UpdatedOn column in KPI table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,AgentId,Direct Mapping to AgentId  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,AgentTimeZone,Direct Mapping to AgentTimeZone column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,Classification,Direct Mapping to Classification  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,CreatedBy,Direct Mapping to CreatedBy  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,CreatedDateTime,Direct Mapping to CreatedOn  column in Labor table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,Duration,Direct Mapping to Duration  column in Labor table coming from DFM Events data processed by Cornerstone having integer values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EntityAction,Direct Mapping to EntityAction  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EntityType,Direct Mapping to EntityType column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier)  column in Labor table coming from DFM Events data processed by Cornerstone having string values. It is the Url to access the event through web.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EventDateTime,Direct Mapping to EventDateTime  column in Labor table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc  column in Labor table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,EventType,Direct Mapping to EventType  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,Id,Direct Mapping to id column in Labor table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in Labor tabel loaded from DFM Events data processed by Cornerstone. 
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,IsM365SR,Direct Mapping to IsM365 column in Labor table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,LateReason,Direct Mapping to LateReason  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,PerformedDateTime,Direct Mapping to PerformedOn  column in Labor table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,SRNumber,Direct Mapping to CaseNumber  column in Labor table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,UpdatedAttributes,Direct Mapping to UpdatedAttrbutes column in Labor table coming from DFM Events data processed by Cornerstone having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,UpdatedBy,Direct Mapping to UpdatedBy  column in Labor table coming from DFM Events data processed by Cornerstone having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,UpdatedDateTime,Direct Mapping to UpdatedOn  column in Labor table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptlaborevents,UpdateReason,Direct Mapping to UpdatedReason  column in Labor table coming from DFM Events data processed by Cornerstone having  String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EntityAction,Direct Mapping to EntityAction column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EntityType,Direct Mapping to EntityType column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier)  column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EventDateTime,Direct Mapping to EventDateTime column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,EventType,Direct Mapping to EventType column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,Id,Direct Mapping to id column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in PhoneInteraction table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,IsM365SR,Direct Mapping to IsM365 column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,SRNumber,Direct Mapping to CaseNumber column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptphoneinteractionevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in PhoneInteraction table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,CompletedDateTime,Direct Mapping to CompletedOn  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EntityAction,Direct Mapping to EntityAction  column in SlaItem table coming from DFM Events data processed by Cornerstone having String values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EntityType,Direct Mapping to EntityType column in SlaItem table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier)  column in SlaItem table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EventDateTime,Direct Mapping to EventDateTime  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC. ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC. ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,EventType,Direct Mapping to EventType  column in SlaItem table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,ExpireDateTime,Direct Mapping to ExpiresOn  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC. ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,Id,Direct Mapping to id  column in SlaItem table coming from DFM Events data processed by Cornerstone having string values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in SlaItem table loaded from DFM Events data processed by Cornerstone.
Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,IsForceSyncEvent,Direct Mapping to IsForceSyncEvent column in SlaItem table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,IsM365SR,Direct Mapping to IsM365 column in SlaItem table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,IsSyncEvent,Direct Mapping to IsSyncEvent  column in SlaItem table coming from DFM Events data processed by Cornerstone having boolean values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,SlaType,Direct Mapping to SlaType  column in SlaItem table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,SRNumber,Direct Mapping to CaseNumber  column in SlaItem table coming from DFM Events data processed by Cornerstone having String values.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,StartDateTime,Direct Mapping to StartsOn  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,State,Direct Mapping to State column in SlaItem table coming from DFM Events data processed by Cornerstone having String values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes  column in SlaItem table coming from DFM Events data processed by Cornerstone having String values .,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptslaevents,UpdatedDateTime,Direct Mapping to UpdatedOn  column in SlaItem table coming from DFM Events data processed by Cornerstone having timestamp values in UTC.,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AgentId,Direct Mapping to AgentId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AgentIdAssignedCount,Direct Mapping to AgentIdAssignedCount column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AgentIdentifiedRootCauseId,Direct Mapping to AgentIdentifiedRootCause column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AgentIdLastUpdatedDateTime,Direct Mapping to AgentIdLastUpdatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AssignmentPending,Direct Mapping to AssignmentPending column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AssignmentPendingSince,Direct Mapping to AssignmentPendingSince column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AutomatedSupportEnabled,Direct Mapping to AutomatedSupportEnabled column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,AzureSubscriptionId,Direct Mapping to AzureSubscriptionId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,BusinessTenant,Direct Mapping to BusinessTenant column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CauseCount,Direct Mapping to Causes column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CauseId,Direct Mapping to CauseId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CauseIdSource,Direct Mapping to CauseIdSource column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CauseType,Direct Mapping to ContractObjID column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,ContractObjId,Direct Mapping to ContractObjID column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,ContractScheduleId,Direct Mapping to ContractScheduleId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,ContractSiteId,Direct Mapping to ContractSiteId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CreatedDateTime,Direct Mapping to CreatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CreationChannel,Direct Mapping to CreationChannel column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CustomerCount,Direct Mapping to Customers column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CustomerIdSource,Direct Mapping to CustomerIdSource column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CustomerProgramPriority,Direct Mapping to CustomerProgramPriority column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CustomerProgramType,Direct Mapping to CustomerProgramType column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,CustomerType,Direct Mapping to CustomerType column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,DeleteOn,Direct Mapping to DeleteOn column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EntityAction,Direct Mapping to EntityAction column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EntityType,Direct Mapping to EntityType column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EntityURI,Direct Mapping to EntityURI (Entity  Universal Resource Identifier) column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EventDateTime,Direct Mapping to EventDateTime column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EventEnqueuedUTCDateTime,Direct Mapping to EnqueuedTimeUtc column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EventProcessedUTCDateTime,Timestamp in UTC at which record is updated by ETL process in UDP,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,EventType,Direct Mapping to EventType column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,ExternalSRId,Direct Mapping to ExternalCaseId column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,FirstEmailInteractionCreatedDateTime,Direct Mapping to FirstEmailInteractionCreatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,InternalTitle,Direct Mapping to InternalTitle column in Cases table coming from DFM Events data processed by Cornerstone having string values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,Is24X7OptedIn,Direct Mapping to Is24X7OptedIn column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsCritsit,Direct Mapping to IsCritSit column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsEUSchrems,Derived by applying decode logic on IsEUSchrems column loaded from DFM Events data processed by Cornerstone ( Cases table) . Logic: If  IsEUSchrems =  'eu' THEN TRUE ELSE FALSE END AS IsEUSchrems,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsForceSyncEvent,Direct Mapping to IsForceSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsHoldOnDelete,Direct Mapping to IsHoldOnDelete column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsM365SR,Direct Mapping to IsM365 column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsPublicSector,Direct Mapping to IsPublicSector column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsSRServiceImpactingEvent,Direct Mapping to IsIncidentServiceImpactingEvent column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,IsSyncEvent,Direct Mapping to IsSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone having Boolean values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,LastEmailInteractionCreatedDateTime,Direct Mapping to LastEmailInteractionCreatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,NativeDataSourceName,Direct Mapping to ActiveSystem column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,OrderId,Direct Mapping to OrderId column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,OriginatingSystem,Direct Mapping to OriginatingSystem column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,PreviousRoutingContextID,"Derived column in Commercial NRT using AgentId, RoutingContextId and SRNumber columns in Cases table coming from DFM Events data processed by Cornerstone. 
Step1- RoutingContextId will have value only for the Cases Event table where the routing is done.
Step2- As soon as the case is assigned to an AgentId, that case will disapper from the queue which means the RoutingContextId will be null. 
Step3- PreviousRoutingContextId is introduced to retain previous RoutingContextId that the SRNumber was in.",Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,PreviousTimeInQueues,Direct Mapping to PreviousTimeInQueues column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,RequestTypePesId,Direct Mapping to RequestTypePesId column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,RootCause,Direct Mapping to RootCause column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,RoutingContextId,Direct Mapping to RoutingContextId column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SAPIssueId,Direct Mapping to SupportAreaPathIssue column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,ServicePackageSKU,Direct Mapping to ServicePackageSku column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,Severity,Direct Mapping to Severity column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SRId,Direct Mapping to IncidentId column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SRNumber,Direct Mapping to CaseNumber column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SRTransferReason,Direct Mapping to CaseTransferReason column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SRTransferReasonDescription,Direct Mapping to CaseTransferReasonDescription column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SRType,Direct Mapping to CaseType column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,State,Direct Mapping to State column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,StateAnnotation,Direct Mapping to StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,StateAnnotationLastUpdatedDateTime,Direct Mapping to StateAnnotationLastUpdatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,StateLastUpdatedDateTime,Direct Mapping to StateLastUpdatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportAreaPathId,Direct Mapping to SAPId (Support Area Path Id) column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportChannelName,Direct Mapping to SupportChannel column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportCountry,Direct Mapping to SupportCountry column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportLanguage,Direct Mapping to SupportLanguage column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportTier,Direct Mapping to SupportTier column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SupportTimeZone,Direct Mapping to SupportTimeZone column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,SymptomId,Direct Mapping to Symptom column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,TeamId,Direct Mapping to TeamId column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,TransferReason,Direct Mapping to TransferReason column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,UpdatedAttributes,Direct Mapping to UpdatedAttributes column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,UpdatedBy,Direct Mapping to UpdatedBy column in Cases table coming from DFM Events data processed by Cornerstone having String values ,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwrptsrevents,UpdatedDateTime,Direct Mapping to UpdatedOn column in Cases table coming from DFM Events data processed by Cornerstone having timestamp values in UTC,Ok,Ok,,Ram,,
UDPCommercial_NRT,vwfactsrclosedevents,AgentIdentifiedRootCauseId,Direct Mapping to AgentIdentifiedRootCauseId  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,AgentIdLastUpdatedDateTime,Direct mapping to AgentIdLastUpdatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having TimeStamp(UTC) values.,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,AgentLineOfBusiness,Direct Mapping to AgentLineOfBusiness column in Cases table coming from DFM Events data processed by Cornerstone having string values. ,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ARRType,"Derived by applying decode logic on ServiceName_ARRS,ServicePackageSKU_ARRS,ServicePackageName_ARRSP, Severity  columns in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP and CommercialProductLevel3Name column in DimPESProduct table coming from Commercial NextDay Datamart within SA&DP.

Logic: WHEN ServiceName_ARRS AND ServicePackageSKU_ARRS IS NOT NULL AND CommercialProductLevel3Name = 'azure tech' THEN 'ARR_PMC' 
WHEN ServicePackageName_ARRSP = 'arr critical prh' AND Severity IN ( '1' ,'2','a') AND CommercialProductLevel3Name = 'azure tech' THEN 'T100'
WHEN ServicePackageName_ARRSP IS NOT NULL AND CommercialProductLevel3Name = 'azure tech' THEN 'ARR Commercial'
ELSE 'Unknown' END AS ARRType",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,AzureSubscriptionId,Direct Mapping to AzureSubscriptionId column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CallingCountry,Direct Mapping to SupportCountry column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CallingTimeZone,Direct Mapping to SupportTimeZone column in Cases table coming from DFM Events data processed by Cornerstone having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CauseTypeKey,This is reference Key to the DimCauseType table to get more details about CauseTypeKey. This key is populated by joining CauseType column in Cases table coming from DFM Events data processed by Cornerstone with CauseType in the DimCauseType coming from Commercial NextDay Datamart within SA&DP..,"Mention source
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CESBICreatedDateTime,Timestamp(UTC) at which record is inserted by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CESBILastUpdatedDateTime,Timestamp(UTC) at which record is updated by ETL process in UDP NRT,Ok,Ok,,Ram,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CollaborationTasks,"Derived by applying decode logic on Id and TaskType columns in CollborationTask table coming from DFM Events processed by Cornerstone source.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='CollaborationTask'.
Step2- If TaskCountId from step 1 is NULL, it is replaced with 0 END AS CollaborationTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CreatedTimeKey,"Derived attribute of datatype Int based on CreatedDateTime column coming from DFM Events processed by Cornerstone source.
Logic: Considering only the date part (and excluding the time part) from the DateTime provided in the yyyyMMdd format.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CurrentSupportAreaKey,Direct mapping to CurrentSupportAreaKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having interger values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CustomerGeographyKey,Direct mapping to CustomerGeographyKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having interger values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CustomerProgramPriority,Direct mapping to CustomerProgramPriority column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,CustomerProgramType,Direct mapping to CustomerProgramType  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,DataSourceKey,This is reference key to the DimDataSource table to get more details of DataSourceKey. It is populated by joining ActiveSystem column in Cases table coming from DFM Events data processed by Cornerstone source with DataSourceName column in DimDataSource coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,DaysToClose,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE When State= ""closed"" then we take days difference between StateLastUpdatedDateTime and CreatedDateTime columns ELSE 0 END AS DaysToClose",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,EmailInteractions,"Derived by applying decode logic on Id and TaskType columns in EmailInteraction table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='EmailInteraction'.
Step2- If TaskCountId coming from step 1 is NULL, it replaces it with 0 END AS EmailInteractions",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,EmployeeKey,This is reference key to DimEmployee to get more details of the employee associated with survey response. It is populated by joining the systemuserid column in systemuser table from cornerstone source with NativeAgentId column in the DimEmployeeMapping table in UDP Common Database for dynamics cases.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,EscalationTasks,"Derived by applying decode logic on Id and TaskType columns in EscalationTasks table from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='EscalationTask'.
Step2- If TaskCountId coming from step 1 is NULL, it replaces it with 0 END AS EscalationTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,FCRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fcr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.","Revisit - step 3 paraphrasing not clear
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,FDRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fdr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.","Revisit
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,FirstAssignmentDateTime,"Derived by applying decode logic on EventDateTime, AgentId, AgentIdAssignedCount and UpdatedAttributes columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE WHEN AgentId IS NOT NULL AND AgentIdAssignedCount = 1 AND UpdatedAttributes like '%AgentId%' THEN EventDateTime END AS FirstAssignmentDateTime.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,FollowupTasks,"Derived by applying decode logic based on Id and TaskType columns in FollowUpTasks table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='FollowupTask'.
Step2- If TaskCountId coming from step1 is NULL, it replaces it with 0 END AS FollowupTasks.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,FWRStateKey,"Derived by applying decode logic on KPIState column in DimKPIState table coming from Commercial NextDay Datamart within SA&DP and  State, Name and SRNumber columns in KPIFlash intermediate table.
KPIFLASH: This intermediate table is derived from KPI table coming from DFM Events data processed by Cornerstone by taking SRNumber, max of State column by grouping on SRNumber and Lower(Name) 
Logic -  
Step-1: DimKPIState table is joined with KPIFLASH intermediate table on join condition DimKPIState.KPIState = KPIFLASH.State and LOWER(KPIFLASH.Name) = 'fwr' to pick max of DimKPIState.KPIStateKey grouped by on KPIFLASH.SRNumber
Step-2: If KPIStateKey derived in step 1 is NULL then hardcoded as -1 else whatever value coming in KPIStateKey is populated.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,GlobalContractKey,"Indirect mapping to GlobalContractKey in DimGlobalContract table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step1- It is fetched by joining Cases table coming from DFM Events data processed by Cornerstone with DimGlobalContract(DGC) when the below following conditions are met.
When Cases.ContractObjId = DGC.GlobalContractID
AND Cases.ContractScheduleId = DGC.GlobalContractScheduleId
AND Cases.ContractSiteID = DGC.GlobalInstallationSiteID
Step2 - If GlobalContractKey is NULL from step1 then replaces it with -1. ",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ICMSRId,Direct mapping to IncidentId column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IdleDays,"Derived by applying decode logic based on PerformedOn and CreatedDateTime columns in Labor and Cases table respectively coming from DFM Events data processed by Cornerstone.
Logic: Calculates the difference in days between the PerformedON column in Labor table and the CreatedDateTime column in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IdleDaysIdleMinutes,"Derived by applying decode logic on PerformedOn and CreatedDateTime in Labor and Cases table respectively coming from DFM Events data processed by Cornerstone having integer values.
Logic: Calculates the difference in minutes between the current timestamp and the PerformedON column in Labor table or CreatedDateTime column in Cases table based on which ever column is not null.",Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IdleTimeSpanKey,"Indirect mapping to IdleTimeSpanKey in DimIdleTimeSpan table coming from Commercial NRT Datamart within SA&DP.
Logic: Step-1 : It is fetched by joining IdleTimeSpan column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP with IdleTimeL1 column in DimIdleTimeSpan table.
Step-2 : If IdleTimeSpanKey from step-1 is NULL then it replaced with -1.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,InitialResponseQueueKey,This is reference key to the DimQueue table to get more details about about Queue. This key is populated by joining RoutingContextId column in Cases table coming from DFM Events data processed by Cornerstone source with NativeQueueId column in DimQueue table coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,InScopingtime,"Derived attribute of datatype int based on EventDateTime, StateAnnotation and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: When StateAnnotation = ('identifying the issue','identifying issue','scope') THEN it calculates the difference in minutes between EventDateTime and CreatedDateTime columns.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,InternalTitle,Direct mapping to InternalTitle column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IRStateKey,"This is reference Key to the DimKPIState table to get more details about KPIState corresponding to InitialResponseState.It is populated by joining KPIState column in Cases table with State column in SlaItem table, both the tables coming from DFM Events data processed by Cornerstone source.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IRStatus,"Derived by applying decode logic based on CompletedDateTime, ExpireDateTime, SlaType columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic : Step 1- We consider the max value of CompletedDateTime and ExpireDateTime columns when SlaType = 'initialresponse'
Step 2- If max of CompletedDateTime is greater than ExpireDateTime then hardcoded as 'Missed'
Step 3- If max of CompletedDateTime is less than or equal to ExpireDateTime then hardcoded as 'Met' Else 'Unknown' END AS  IRStatus","Checked the condition 
CASE WHEN SlaType = 'initialresponse' THEN CompletedDateTime END ) is greater than MAX of (CASE WHEN SlaType = 'initialresponse' THEN ExpireDateTime END )
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IRStatusKey,"Indirect mapping to IRStatusKey in DimIRStatus table coming from Commercial NRT Datamart within SA&DP.
Logic: Step1- It is fetched by joining IRStatus column in DimIRStatus table with IRStatus column in SlaItem table coming from DFM Events data processed by Cornerstone.
Step2- If IRStatusKey is NULL from step1 then replaces it with -1. ","Check the line ""IdleTimeSpanKey is NULL from step 1""?
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,Is24X7OptedIn,Direct mapping to Is24X7OptedIn column in Cases table coming  from DFM Events data processed by Cornerstone source  having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsARR,Direct mapping to IsARR column in DimSupportServiceRequest table coming  from Commercial NextDay Datamart within SA&DP source  having boolean values.,Ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsAzureACEProgram,"Derived by applying decode logic based on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone.
Logic: CASE When ProgramType = 'Azure ACE' then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsBug,"Dervied by applying decode logic on Causetype column in Cases table coming DFM Events data processed by Cornerstone source having string values.
Logic :CASE When CasueType='Bug' then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsCEnS,"Derived by applying decode logic on ChannelOrgCode,FunctionHierarchyKey,ChannelOrgSummaryName, IsCEnS columns in DimFunctionHierarchy table coming from MDM source. 
Logic:
          If lower(ChannelOrgCode)='b20e' Then true
          If FunctionHierarchyKey=-1 or ChannelOrgSummaryName='Unknown' or FunctionHierarchyKey is Null THEN
              CASE 
              If   MDM.IsCEnS is not null then Cast(MDM.IsCEnS as Boolean)
              Else true
              END
         WHEN lower(ChannelOrgCode)<>'b20e' Then false
          Else true
          END AS IsCEnS ",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsCritsit,Direct mapping to IsCritSit column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsCSSCSDProgram,"Derived by applying decode logic on ProgramType column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic : CASE When ProgramType = %csscsd% then hardcoded as true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsCubeFlag,"Derived by applying decode logic on TenantName column in DimTenant table, DataSourceKey column in DimDataSource table, QueueName column in DimQueue table coming from Commercial NextDay Datamart within SA&DP, EmployeeEmail and CSCompanyAgency columns in DimEmployee table coming from UDP Common Database for dynamics cases, PreviousRoutingQueueName column in SREvents table coming from DFM Events data processed by Cornerstone and SupportAreaName column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP 
Logic:CASE WHEN TenantName LIKE '%contoso%' OR 'mstest_%' OR 'test_test_%' OR 'test' OR 'msft' THEN 0
	            WHEN DataSourceKey = 203 AND EmployeeEmail NOT LIKE '%offagent%'
                                AND CSCompanyAgency NOT IN ('Avande', 'Experis', 'Mural', 'Rhipe', 'Sherweb', 'Subfero Ltd', 'Zones Inc')
				AND WHEN QueueName OR PreviousRoutingQueueName NOT IN ( 'MSaaS Rave Transfers', 'Engineering')
				AND SupportAreaName NOT LIKE '%test%' OR SupportAreaName NOT LIKE '%lab%'
		   THEN 1 ELSE 0 END AS IsCubeFlag","To be checked by dev
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsD365ACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic :  CASE When ProgramType = '%d365%' then hardcoded true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsEUSchrems,"Derived by applying decode logic on IsEUSchrems column in Cases table coming from DFM Events data processed by Cornerstone source having string values.
Logic : CASE When IsEUSchrems = 'eu' Then TRUE Else FALSE END AS IsEUSchrems",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsForceSyncEvent,Direct Mapping to IsForceSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsIdentityACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone having string values.
Logic : CASE When ProgramType ='%identity%'  then true else false",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsM365ACEProgram,"Derived by applying decode logic on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone having string values.
Logic : CASE When ProgramType = '%m365%'  then true else false",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsM365SR,Direct mapping to IsM365SR column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsPartnerSR,Direct Mapping to IsPartnerServiceRequest column in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsPublicSector,Direct mapping to IsPublicSector column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsPurged,"Derived attribute of datatype boolean in PurgedIncidents table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step1 - We hardcode IsPurged as 1 for the all distinct ServiceRequestNumber coming from PurgedIncidents table.
Step2 - We fetch IsPurged by joining SRNumber column in Cases table coming from DFM Events data processed by Cornerstone and ServiceRequestNumber column in PurgedIncidents table.
Step3 - If the value from step 2 is null then it will assign 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsReopen,"Derived by applying decode logic based on ReopenCount column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:If ReopenCount > 0 then True Else False",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsRepair,"Derived by applying decode logic based on ServiceRequestID column in Cases table coming from DFM Events data processed by Cornerstone and DataSourceKey column in DimDataSource table coming from Commercial NextDay Datamart within SA&DP.
Logic: Step 1- If DatasourceKey=3 it then goes to step 2 else step 3.
Step2- If ServiceRequestID column is not NULL then it's hardcoded as 'Yes' else 'No'. 
Step3- It assigns the value 'Unknown'.","Rewrite the desc, paraphrasing is missing.
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsRestrictedAccess,Direct mapping to IsRA in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsS500Program,Direct Mapping to IsS500Program column in DimSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRInitialResponse30min,"Derived by applying decode logic on CompletedOn and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: Step 1- Calculates time difference in minutes between CompletedOn and CreatedDateTime columns in Cases table. 
Step 2- If the value from step 1 is less than or equal to 30 minutes it's hardcoded as 1 else 0.","paraphrasing is missing, rewrite
Updated Ram
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRScoping,"Derived by applying decode logic based on StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE WHEN StateAnnotation  = ('identifying issue' ,'identifying the issue' ,'scope' ,'initial contact pending' ,'resolved' ,'resolved by customer' ,'resolved external' ,'troubleshooting' ,'waiting for confirmation' ,'waiting for information' ) Then hardcoded as 1 else 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRServiceImpactingEvent,Direct mapping to IsIncidentServiceImpactingEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRSolutionDelivered,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = ('waiting for confirmation' ,'resolved' ,'resolved external' ,'resolved by customer') THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRSolutionDeliveredPendingConfirmation,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = 'waiting for confirmation'  THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRSolutionDeliveredSolutionConfirmed,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
Logic: When StateAnnotation = ('resolved','resolved external','resolved by customer') THEN 1 ELSE 0 .",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSRTroubleShooting,"Derived attribute of datatype boolean based on StateAnnotation column in Cases table coming from DFM Events data processed by  Cornerstone.
 Logic:When StateAnnotation IN ('troubleshooting') then True else Flase.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsStrategicProgram,"Derived by applying decode logic based on ProgramType column in Cases table coming  from DFM Events data processed by Cornerstone source.
Logic: If ProgramType contains values like 'S500' then true else false.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsSyncEvent,Direct Mapping to IsSyncEvent column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsTransferred,"Derived by applying decode logic based on AgentId column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : WHEN AgentId IS NULL THEN hardcoded as 0 else 1",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsWaitingforScope,"Derived by applying decode logic based on StateAnnotation column in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE WHEN StateAnnotation NOT IN ('identifying the issue','identifying issue','scope')  THEN 1 ELSE 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,IsWaitingOnScopingOver24,"Derived by applying decode logic based on StateAnnotation, CreatedDateTime  columns in Cases table coming from DFM Events data processed by Cornerstone source having boolean values.
Logic : CASE 
STEP 1: WHEN StateAnnotation NOT IN ('identifying the issue','identifying issue','scope')  THEN we take difference in hours between Current Timestamp and CreatedDateTime 
STEP 2 : if the difference from Step1 is greater than 24 then it assign 1 else 0. 
",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,LaborLastPerformedDateTime,Direct Mapping to CreatedDateTime column  in Labor Table coming from DFM Events data processed by Cornerstone source having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,LaborSpanKey,This is reference key to the DimIdleTimeSpan to get more details about IdleTimeSpan .It is populated by joining LaborSpan column in DimLaborTimeSpan table coming from Commercial NextDay Datamart within SA&DP with LaborSpanL1 column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,Link,Direct mapping to EntityURI column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PartnerTenantId,"Derived by applying decode logic on CustomerType, CustomerType2, CustomerType3, CustomerIdSource, CustomerIdSource2, CustomerIdSource3 columns in Cases table loaded from DFM Events data processed by Cornerstone source.
Logic: CASE   WHEN CustomerType ='supportpartner' and CustomerIdSource is not equal to 'unknown' and CustomerIdSource is NOT NULL THEN CustomerId1
	             WHEN CustomerType2 ='supportpartner' and CustomerIdSource2 is not equal to 'unknown' and CustomerIdSource2 is NOT NULL THEN CustomerId2
                             WHEN CustomerType3 ='supportpartner' and CustomerIdSource3 is not equal to 'unknown' and CustomerIdSource3 is NOT NULL THEN CustomerId3
            END AS PartnerTenantId",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PESProductKey,"This is reference key to the DimPESProduct to get more details of PESProduct. This key is populated by joining PesproductId column in DimPESProduct table with PesproductId column in DimSupportAreaPath, both the tables coming from Commercial NextDay Datamart within SA&DP",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PhaseKey,"This is reference key to the DimPhase table to get more details abour Phase. This key is populated by joining Phase column in FactSRSupportData table with Phase column in Cases table, both the tables comng from Commercial NRT Datamart within SA&DP.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PhoneInteractions,"Derived by applying decode logic on Id and TaskType columns in PhoneInteraction table coming from DFM Events processed by Cornerstone having integer values.
Logic: Step1- We take the distinct Id as TaskCountId when TaskType='PhoneInteraction'.
Step2- If TaskIdCount coming from step 1 is NULL, it replaces it with 0 END AS PhoneInteractions.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PlanningCategoryKey,Direct mapping to PlanningCategoryKey column in FactSupportServiceRequest table comng from Commercial NextDay Datamart within SA&DP source having integer values.,ok,Provide the logic for surrogate key generation like which columns ?,,Ram,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,PreviousAssignedQueueKey,"Derived by applying decode logic based on Row_InitialPreviousRoutingContext ,EventDateTime columns in SREvents table coming from DFM Events data processed by Cornerstone .
Logic: - Step1- WHEN Row_InitialPreviousRoutingContext = 1 from SREvents table then we consider QueueKey from DimQueue table coming from Commercial NextDay Datamart within SA&DP by joining PreviousRoutingContextId in SREvents table with NativeQueueID in DimQueue table.
Step2- The QueueKey fetched from step1 is aliased as PreviousAssignedQueueKey.","Rewritethe description for significance of queuekey
Can you confirm if is it reference key (queueKey) ? If yes, this need to updated as reference key in desc.
[Eshwar] This is not reference key.
Ok.",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,QueueKey,This is reference key to the DimQueue to get more details of Queue.This key is populated by joining RoutingContextId column in Cases table coming from DFM Events data processed by Cornerstone with NativeQueueId column in DimQueue table coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ReopenCount,"Derived attribute of datatype smallint based on CaseReopenRowID and EntityAction columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: WHEN  CaseReopenRowID = 1 THEN 1 ELSE 0 AS ReopenCount where EntityAction = 'CaseReopened'",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,RestrictedAccessProgramName,Direct mapping to RestrictedAccessProgramName column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,RootCause,Direct Mapping to RootCause column coming inCases Table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SAPIssueId,Direct mapping to SupportAreaPathIssue  column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SAPKey,This is a reference key to the DimSupportAreaPath table to get more details about Support area path. This key is populated by joining SupportAreaPathID column in DimSupportAreaPath table coming from Commercial NextDay Datamart within SA&DP with SAPID column in Cases table coming from  DFM Events data processed by Cornerstone.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ScopeAgeSpanKey,This is reference key to the DimScopeAgeSpan to get more details about ScopeAgeSpan.This key is populated by joining ScopeAgeSpan column in Factsupportdata coming from Commercial NRT Datamart within SA&DP with ScopeAgeSpan column in DimScopeAgeSpan coming from Commercial NextDay Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ServiceOfferingMasterKey,"This is reference key to ServiceOfferingMasterKey table to get more details about ServiceOfferingMaster.This key is populated by joining SRNumber column in FactSRSupportData table with SRNumber column in Cases table, both the tables coming from Commercial NRT Datamart within SA&DP.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,ServiceRequestStatus,"Derived by applying decode logic on StateAnnotation, DynamicsStatus, EventDateTime and ActiveSystem columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic: CASE WHEN ActiveSystem = 'dynamics' AND EventDateTime greater than or equal to  '2022-02-21' THEN DynamicsStatus ELSE StateAnnotation END AS ServiceRequestStatus",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SLACompletedDateTime,Direct mapping to CompletedDateTime column in Cases table coming from DFM Events data processed by Cornerstone source having timestamp(UTC) values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SLAExpiresDateTime,Direct Mapping to StartDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SLAStartDateTime,Direct Mapping to SLAStartDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRAgeDays,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in days between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in days between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
               If the result when either of the above conditions met SRAgeDays assigned to 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRAgeHrs,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in hours between Current Timestamp and CreatedDateTime column in Cases table.
               When State ='Closed' it calculates the difference in hours between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
                If the result when either of the above conditions met it assign 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRAgeMin,"Derived by applying decode logic on State, StateLastUpdatedDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:  When State ='Open' it calculates the difference in minutes between Current Timestamp and CreatedDateTime column in Cases table.
              When State ='Closed' it calculates the difference in minutes between StateLastUpdatedDateTime and CreatedDateTime columns in Cases table.
               If the result when either of the above conditions met it assign 1 else it assign 0 when any of the DateTime column is null.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRAgeTimeSpanKey,This is reference key to the DimAgeTimeSpan table to get more details about AgeTimeSpan. This key is populated by joining TimeSpan column in DimTimeSpan table coming from Commercial NextDay Datamart within SA&DP with CaseAgeTimeSpan column in FactSRSupportData coming from Commercial NRT Datamart within SA&DP.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRClosedDateTime,Direct mapping to StateLastUpdatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRCreatedDateTimeId,"Derived attribute of datatype int based on CreatedDateTime column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:Step1-  It fetches the date portion from CreatedDateTime and removes hyphens from it.
Step2-If SRCreatedDateTimeId from step1 has null values then it replaces it with -1.","Rewrite the logic in desc, by mentioning like below:
It extracts the date from CreateDateTime by removing the Hyphen.
Ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRCreatedDateTimeSeconds,"Derived attribute of datatype int based on CreatedDateTime  column in Cases table from DFM data processed by Cornerstone.It is joined using SRNumber from both FactSupportData and Cases table.
Logic:Step1- It calculates the number of seconds passed since the start of the day (midnight) for a given CreatedDateTime. 
           Step2- It then rounds the value fetched from step1 up to the nearest 30-minute interval and subtracts 1 second and aliased as SRCreatedDateTimeSeconds.

Example: The CreatedDateTime is 2024-03-07 15:25:30,
                Step1 : Calculate Seconds from 12 am and the time difference is 15 h 25 min 30 sec, which equals to 55,530 seconds.
                Step 2: Divide 55,530 sec by 1800 (seconds in 30 minutes), resulting in 30.85 and round off which would be 31 mins.
                Step 3: Multiply 31 min (from step 2) by 1800 to get Seconds in 30-minute Increments that is 55,800 seconds.
                 Step 4: Subtract 1 second from 55,800 seconds, resulting in 55,799 seconds end as SRCreatedDateTimeSeconds.
","Logic is not clear, check
updated
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRCreatedTimeOfDayId,Direct mapping to TimeOfDayID column in DimTImeOfDay table coming from Commercial NRT Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRCreationChannel,Direct mapping to CreationChannel  column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRCreationDateTime,Direct mapping to CreatedDateTime  column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRDeliveryLanguage,Direct mapping to SupportLanguage  column in Cases table coming from DFM Events data processed by Cornerstone having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRKey,Surrogate key generated within UDP NRT to identify unique records of FactSREvents table.It is generated using SRNumber.,ok,Provide the logic for surrogate key generation like which columns ?,,Ram,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRLastModifiedDateTime,Direct mapping to LastModifiedDateTime column in Cases table coming from DFM Events data processed by Cornerstone having Timestamp(UTC)values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRMaxSeverity,"Derived by applying decode logic based on Severity column in Cases table coming from DFM Events data processed by Cornerstone source.
Logic :  If the severity from cases table is unknown (either explicitly set to -1 or null), it is labeled as 'Unknown'. 
                 If the severity is '2', it is labeled as 'A'. If it's '3', it's labeled as  'B', and if it's '4', it's labeled as 'C'.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRModality,Direct mapping to SupportChannel column in Cases table coming from DFM Events data processed by Cornerstone having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRModifiedTimeId,"Derived by applying decode logic on EventDateTime column in DFM Events data processed by Cornerstone.
Logic: Step1- It extracts the date portion of EventDateTime.
Step2- If SRModifiedTimeId from step1 has null values then it's replaced with -1.","Logic update by referring to SRCreatedDateTimeId column
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRModifiedTimeOfDayId,Direct mapping to TimeOfDayID column in DimTImeOfDay table coming from Commercial NRT Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRNumber,Direct mapping to CaseNumber  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SROriginatingDataSource,Direct mapping to OriginatingSystem  column in Cases table coming from DFM Events data processed by Cornerstone having Integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SROwner,Direct mapping to AgentId column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SROwnerCount,Direct mapping to AgentIdAssignedCount  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SROwnerManager,Direct mapping to CurrentManagerEmail column in DimEmployee Table coming from Commercial NextDay Datamart within SA&DP source.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SROwnerTimezone,Direct mapping to SupportTimeZone column in Cases table coming from DFM Events data processed by Cornerstone having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRQueueFullName,"Derived by applying decode logic on QueueName and PreviousRoutingQueueName columns in DimQueue coming from Commercial NextDay Datamart within SA&DP and SREvents table coming from Commercial NRT Datamart within SA&DP.
Logic: It converts either ""QueueName"" or ""PreviousRoutingQueueName"" to a string, if both are null it assign 'Unknown'.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRScopeTimeDateTimeId,"Derived by applying decode logic on StateAnnotation and EventDateTime columns in Cases table coming from DFM Events data processed by Cornerstone source.
Logic:Step1 - It extracts the date portion of ""EventDateTime"" WHEN ""StateAnnotation""= ('identifying the issue', 'identifying issue', 'scope').
Step2 - If step 1 fetches null values then ut replaced with -1","Logic update by referring to SRCreatedDateTimeId column
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRScopingDateTime,"Derived by applying decode logic on StateAnnotation and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: If  StateAnnotation contains any one of the specified values in ('identifying the issue', 'identifying issue', 'scope') then it returns the EventDateTime from Cases table otherwise, it returns NULL.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRServiceOffering,This is reference attribute to the DimServiceOffering table to get more details about the SRServiceOffering. It is populated by joining ServiceName column in DimServiceOffering coming from Commercial NextDay Datamart within SA&DP with SKU column in IncidentRedemption table coming from DFM Events data processed by Cornerstone.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRSeverity,Direct mapping to Severity  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRSkillIdList,Direct Mapping to ServiceRequestSkillIdList column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRStatus,Direct mapping to State  column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRSubType,Direct mapping to CaseType column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoAssignment,"Derived by applying decode logic on EventDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic:  It calculates minute difference between EventDateTime and CreatedDateTime column when EntityAction= 'AgentAssigned' in cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoInitialResponse,"Derived by applying decode logic CompletedDateTime,Type and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It calculates  minute difference between CompletedDateTime and CreatedDateTime columns When Type = 'InitialResponse' in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoScoping,"Derived by applying decode logic on StateAnnotation, EventDateTime and CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: IF StateAnnotation is in any of the specified values ('identifying the issue', 'identifying issue', 'scope'), it returns the EventDateTime from cases table otherwise, it returns NULL.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoSolutionConfirmed,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic:  It takes minute difference between EventDateTime and CreatedDateTime columns when StateAnnotation in ('waiting for confirmation').",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoSolutionoffered,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It takes minute difference of EventDateTime and CreatedDateTime columns when StateAnnotation IN ( 'resolved','resolved external','resolved by customer').",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTimetoTroubleShooting,"Derived by applying decode logic on StateAnnotation, EventDateTime, CreatedDateTime columns in Cases table coming from DFM Events data processed by Cornerstone.
Logic: It takes  minute difference between EventDateTime and CreatedDateTime when StateAnnotation IN ('troubleshooting') in Cases table.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRTotalLaborMinutes,"Derived by applying decode logic based on LaborMinutes column in Cases table coming from DFM Events processed by Cornerstone having integer values.
Logic:  Step1- If the LaborMinutes value from Cases table is not null then we will take CurrentTimestamp, 
Step2- If step1 fetches null value then it's replaced with 0.",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRType,"Derived  by applying decode logic on IncidentType and CaseType columns in Cases table coming from DFM Events data processed by Cornerstone having string values.
Logic :
Step 1 : It checks if a certain condition involving IncidentType column in FactSRSupportData table coming from Commercial NRT Datamart within SA&DP is true. 
Step 2: If Step 1 is true, then it checks the value of SRType  column in Cases table coming from DFM Events data processed by Cornerstone and assigns specific values based on different scenarios. 
Step 3: If the initial condition from Step 1 is false, it returns the result as 'Unknown'.","Write the logic in steps
ok",,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SRUri,Direct mapping to CaseUri column in Cases table coming from DFM Events data processed by Cornerstone having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SupportLanguageKey,Direct Mapping to SupportLanguageKey column in FactSupportServiceRequest table coming from Commercial NextDay Datamart within SA&DP source having integer values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SupportTier,Direct mapping to SupportTier  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,SymptomSupportTopicKey,Direct mapping to SupportTopicKey column in DimSupportTopic Table coming from Commercial NextDay Datamart within SA&DP source having interger values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TeamId,Direct mapping to TeamId  column in Cases table coming from DFM Events data processed by Cornerstone source having String values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TenantId,"Derived by applying case logic on CustomerType1, CustomerType2, CustomerType3, CustomerIdSource1, CustomerIdSource2, CustomerIdSource3 columns in Cases table coming from DFM Events data processed by Cornerstone source.
logic:If CustomerType1='enterprise' and CustomerIdSource1 not equal to 'unknown' and CustomerIdSource1 is NOT NULL THEN CustomerId1,
           WHEN CustomerType2='enterprise' and CustomerIdSource2 not equal to 'unknown' and CustomerIdSource2 is NOT NULL THEN CustomerId2,
           WHEN CustomerType3='enterprise' and CustomerIdSource3 not equal to 'unknown' and CustomerIdSource3 is NOT NULL THEN CustomerId3,
           END AS TenantId",ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TranferredTo,Direct mapping to TranferredTo  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TransferReason,Direct mapping to TransferReason column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TransferredBy,Direct mapping to UpdatedBy  column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TransferredDateTime,Direct mapping to EventDateTime column in Cases table coming from DFM Events data processed by Cornerstone source having timestamp(UTC) values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,TransferredFrom,Direct mapping to TransferredFrom column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated
UDPCommercial_NRT,vwfactsrclosedevents,UpdatedByAgent,Direct mapping to UpdatedBy column in Cases table coming from DFM Events data processed by Cornerstone source having string values.,ok,,,,,Updated